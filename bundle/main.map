{"version":3,"sources":["webpack:///backend.js","webpack:///webpack/bootstrap bf7b220192d850e3c063","webpack:///./src/main.ts","webpack:///./src/app.ts","webpack:///./src/endpoints/endpoints.ts","webpack:///./src/orm/config.ts","webpack:///./src/orm/store-manager.ts","webpack:///./src/orm/table-models/company.table-model.ts","webpack:///./src/orm/table-models/contact.table-model.ts","webpack:///./src/orm/table-models/note.table-model.ts","webpack:///./src/orm/table-models/quote-line.table-model.ts","webpack:///./src/orm/table-models/quote.table-model.ts","webpack:///./src/orm/table-models/user.table-model.ts","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"sequelize\"","webpack:///external \"socket.io\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","app_1","Server","bootstrap","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","http","express","Socketio","store_manager_1","endpoints_1","_super","_this","port","app","config","endPoints","server","createServer","console","log","listen","IO","crmStoreManager","CRMStoreManager","on","socket","socketOnCompanies","socketOnQuotes","socketOnContacts","socketOnUsers","socketOnNotes","createTestUser","then","user","emit","Endpoints","payload","createNote","note","error","id","getNote","getNotes","notes","setNoteProp","response","getUser","err","setUserProp","createQuote","quote","getQuote","quotes","getQuotes","setQuoteProp","createContact","contact","getContact","contacts","getContacts","setContactProp","getCompany","companies","getCompanies","setCompanyProp","company","createCompany","DB_CONFIG","username","password","database","host","dialect","pool","max","min","idle","storage","sequelizeStatic","config_1","company_table_model_1","user_table_model_1","contact_table_model_1","quote_line_table_model_1","quote_table_model_1","note_table_model_1","_dbConfig","dbConfig","modelsInit","User","userModel","sequelize","Company","companyModel","Contact","contactModel","Note","noteModel","Quote","quoteModel","QuoteLine","quoteLineModel","hasMany","belongsTo","syncTable","sync","firstName","lastName","email","role","Promise","resolve","reject","findById","userInstance","update","_a","prop","key","catch","instance","companiesInstance","findAll","include","where","companyInstance","contactsInstance","contactInstances","contactInstance","owner_id","models","props","KEY","keys","noteInstance","quotesInstance","quoteInstance_find","quoteInstance","createQuoteLine","quoteId","quoteLine","quoteLineInstance","DataTypes","sequlize","define","type","UUID","primaryKey","defaultValue","UUIDV4","STRING","addressOne","addressTwo","city","zip","phone","web","fax","misc","created_at","DATE","allowNull","updated_at","deleted_at","freezeTableName","paranoid","underscored","position","title","text","weight","DOUBLE","isCentered","BOOLEAN","unit","cost","FLOAT","desc","passHash","ENUM","values","required","businessName","businessWeb","businessPhone","businessFax","require"],"mappings":"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","file":"backend.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 15);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar app_1 = __webpack_require__(1);\r\nfunction boot() {\r\n    app_1.Server.bootstrap();\r\n}\r\nboot();\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http = __webpack_require__(12);\r\nvar express = __webpack_require__(11);\r\nvar Socketio = __webpack_require__(14);\r\nvar store_manager_1 = __webpack_require__(4);\r\nvar endpoints_1 = __webpack_require__(2);\r\nvar Server = (function (_super) {\r\n    __extends(Server, _super);\r\n    function Server() {\r\n        var _this = _super.call(this) || this;\r\n        _this.port = 1729;\r\n        _this.app = express();\r\n        _this.config();\r\n        _this.endPoints();\r\n        return _this;\r\n    }\r\n    Server.bootstrap = function () {\r\n        return new Server();\r\n    };\r\n    ;\r\n    Server.prototype.config = function () {\r\n        this.server = http.createServer(this.app);\r\n        console.log('listening on port ' + this.port);\r\n        this.server.listen(this.port);\r\n        this.IO = Socketio(this.server);\r\n        this.crmStoreManager = new store_manager_1.CRMStoreManager();\r\n    };\r\n    Server.prototype.endPoints = function () {\r\n        var _this = this;\r\n        this.IO.on('connection', function (socket) {\r\n            _this.socketOnCompanies(socket, _this.crmStoreManager);\r\n            _this.socketOnQuotes(socket, _this.crmStoreManager);\r\n            _this.socketOnContacts(socket, _this.crmStoreManager);\r\n            _this.socketOnUsers(socket, _this.crmStoreManager);\r\n            _this.socketOnNotes(socket, _this.crmStoreManager);\r\n            socket.on('user.test.create', function () {\r\n                _this.crmStoreManager\r\n                    .createTestUser()\r\n                    .then(function (user) {\r\n                    socket.emit('user.test.create.response', user);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    return Server;\r\n}(endpoints_1.Endpoints));\r\nexports.Server = Server;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Endpoints = (function () {\r\n    function Endpoints() {\r\n    }\r\n    Endpoints.prototype.socketOnNotes = function (socket, crmStoreManager) {\r\n        socket.on('notes.create', function (payload) {\r\n            if (payload) {\r\n                crmStoreManager.createNote(payload)\r\n                    .then(function (note) {\r\n                    socket.emit('notes.create.response', note);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('notes.create.response', { error: 'Cannot create without payload.' });\r\n            }\r\n        });\r\n        socket.on('notes.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getNote(payload)\r\n                    .then(function (note) {\r\n                    socket.emit('notes.get.response', note);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager.getNotes()\r\n                    .then(function (notes) {\r\n                    socket.emit('notes.get.response', notes);\r\n                });\r\n            }\r\n        });\r\n        socket.on('notes.set', function (payload) {\r\n            crmStoreManager.setNoteProp(payload)\r\n                .then(function (response) {\r\n                socket.emit('notes.set.response', response);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnUsers = function (socket, crmStoreManager) {\r\n        socket.on('user.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getUser(payload)\r\n                    .then(function (user) {\r\n                    socket.emit('user.get.response', user);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('user.get.response', { error: 'No ID in payload' });\r\n            }\r\n        });\r\n        socket.on('user.set', function (payload) {\r\n            crmStoreManager.setUserProp(payload)\r\n                .then(function (response) {\r\n                console.log('res', response);\r\n                socket.emit('user.set.response', response);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnQuotes = function (socket, crmStoreManager) {\r\n        socket.on('quotes.create', function (payload) {\r\n            if (payload) {\r\n                crmStoreManager.createQuote(payload)\r\n                    .then(function (quote) {\r\n                    socket.emit('quotes.create.response', quote);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('quotes.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getQuote(payload)\r\n                    .then(function (quotes) {\r\n                    socket.emit('quotes.get.response', quotes);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager.getQuotes().then(function (quotes) {\r\n                    socket.emit('quotes.get.response', quotes);\r\n                });\r\n            }\r\n        });\r\n        socket.on('quotes.set', function (payload) {\r\n            crmStoreManager.setQuoteProp(payload).then(function (quotes) {\r\n                socket.emit('quotes.set.response', quotes);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnContacts = function (socket, crmStoreManager) {\r\n        socket.on('contacts.create', function (payload) {\r\n            if (payload) {\r\n                crmStoreManager.createContact(payload).then(function (contact) {\r\n                    socket.emit('contacts.create.response', contact);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('contacts.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getContact(payload)\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.get.response', payload);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager.getContacts()\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.get.response', contacts);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('contacts.set', function (payload) {\r\n            if (payload && typeof payload.id === 'string')\r\n                crmStoreManager.setContactProp(payload)\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.set.response', contacts);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnCompanies = function (socket, crmStoreManager) {\r\n        socket.on('companies.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getCompany(payload)\r\n                    .then(function (companies) {\r\n                    socket.emit('companies.get.response', companies);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager.getCompanies()\r\n                    .then(function (companies) {\r\n                    socket.emit('companies.get.response', companies);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('companies.set', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.setCompanyProp(payload)\r\n                    .then(function (company) {\r\n                    socket.emit('companies.set.response', company);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('companies.set.response', { error: 'Error: No payload or id' });\r\n            }\r\n        });\r\n        socket.on('companies.create', function (payload) {\r\n            crmStoreManager\r\n                .createCompany(payload)\r\n                .then(function (company) {\r\n                socket.emit('companies.create.response', company);\r\n            });\r\n        });\r\n    };\r\n    return Endpoints;\r\n}());\r\nexports.Endpoints = Endpoints;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DB_CONFIG = {\r\n    username: 'rdev',\r\n    password: '',\r\n    database: 'angular-bros-crm',\r\n    host: 'localhost',\r\n    dialect: 'sqlite',\r\n    pool: {\r\n        max: 5,\r\n        min: 0,\r\n        idle: 10000\r\n    },\r\n    storage: './rdev.sql3'\r\n};\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar sequelizeStatic = __webpack_require__(13);\r\nvar config_1 = __webpack_require__(3);\r\nvar company_table_model_1 = __webpack_require__(5);\r\nvar user_table_model_1 = __webpack_require__(10);\r\nvar contact_table_model_1 = __webpack_require__(6);\r\nvar quote_line_table_model_1 = __webpack_require__(8);\r\nvar quote_table_model_1 = __webpack_require__(9);\r\nvar note_table_model_1 = __webpack_require__(7);\r\nvar CRMStoreManager = (function () {\r\n    function CRMStoreManager() {\r\n        this._dbConfig = config_1.DB_CONFIG;\r\n        this.dbConfig(this._dbConfig);\r\n        this.modelsInit();\r\n    }\r\n    CRMStoreManager.prototype.modelsInit = function () {\r\n        this.User = user_table_model_1.userModel(sequelizeStatic, this.sequelize);\r\n        this.Company = company_table_model_1.companyModel(sequelizeStatic, this.sequelize);\r\n        this.Contact = contact_table_model_1.contactModel(sequelizeStatic, this.sequelize);\r\n        this.Note = note_table_model_1.noteModel(sequelizeStatic, this.sequelize);\r\n        this.Quote = quote_table_model_1.quoteModel(sequelizeStatic, this.sequelize);\r\n        this.QuoteLine = quote_line_table_model_1.quoteLineModel(sequelizeStatic, this.sequelize);\r\n        this.User.hasMany(this.Company);\r\n        this.Contact.belongsTo(this.Company);\r\n        this.Contact.hasMany(this.Note);\r\n        this.Company.belongsTo(this.User);\r\n        this.Company.hasMany(this.Contact);\r\n        this.Company.hasMany(this.Quote);\r\n        this.Quote.belongsTo(this.Company);\r\n        this.Quote.hasMany(this.QuoteLine);\r\n        this.QuoteLine.belongsTo(this.Quote);\r\n    };\r\n    CRMStoreManager.prototype.dbConfig = function (config) {\r\n        this.sequelize = new sequelizeStatic(config.database, config.username, config.password, {\r\n            host: config.host,\r\n            dialect: config.dialect,\r\n            pool: {\r\n                max: config.pool.max,\r\n                min: config.pool.min,\r\n                idle: config.pool.idle\r\n            },\r\n            storage: config.storage\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.syncTable = function () {\r\n        var _this = this;\r\n        this.sequelize.sync().then(function () {\r\n            _this.User.create({\r\n                firstName: 'Test',\r\n                lastName: 'Tester',\r\n                email: 'test@tester.com',\r\n                role: 'admin'\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getUser = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(payload.id)\r\n                .then(function (userInstance) {\r\n                console.log('user ', userInstance);\r\n                resolve(userInstance);\r\n                reject('error with find ID');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setUserProp = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(payload.id).then(function (userInstance) {\r\n                userInstance.update((_a = {}, _a[payload.prop.key] = payload.prop.value, _a))\r\n                    .then(function (response) {\r\n                    console.log('user set', response);\r\n                    if (+response[0] === 1) {\r\n                        _this.User.findById(payload.id)\r\n                            .then(function (userInstance) {\r\n                            resolve(userInstance);\r\n                        }, function (error) { return reject('user set prop error: ' + error); });\r\n                    }\r\n                }, function (error) {\r\n                    reject('update error with' + error);\r\n                }).catch(function (error) { return console.log(error); });\r\n                var _a;\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createTestUser = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.sequelize.sync().then(function (instance) {\r\n                return instance.User.create({\r\n                    email: 'test@tester.com',\r\n                    role: 'general'\r\n                });\r\n            }).then(function (userInstance) {\r\n                resolve(userInstance);\r\n                reject('error with test user');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getCompany = function (payload) {\r\n        var _this = this;\r\n        if (payload) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Company.findById(payload.id)\r\n                    .then(function (companiesInstance) {\r\n                    resolve(companiesInstance);\r\n                    reject('error with find ID');\r\n                });\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.getCompanies = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findAll({\r\n                include: [_this.Contact, _this.Quote]\r\n            })\r\n                .then((function (companies) {\r\n                resolve(companies);\r\n                reject('error: no companies found');\r\n            }));\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setCompanyProp = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.update(payload.prop, {\r\n                where: { id: payload.id }\r\n            }).then(function (response) {\r\n                if (+response[0] === 1) {\r\n                    _this.Company.findById(payload.id)\r\n                        .then(function (companyInstance) {\r\n                        resolve(companyInstance);\r\n                    }, function (error) { return reject('Company set prop error :' + error); });\r\n                }\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createCompany = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.create(payload, {\r\n                include: [_this.Quote, _this.Contact]\r\n            }).then(function (companyInstance) {\r\n                resolve(companyInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getContact = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findById(payload.id)\r\n                .then(function (contactsInstance) {\r\n                resolve(contactsInstance);\r\n                reject('error with find ID');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getContacts = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findAll({\r\n                include: [_this.Note]\r\n            }).then(function (contactInstances) {\r\n                resolve(contactInstances);\r\n            }, function (error) { return reject('error finding Contacts: ' + error); });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setContactProp = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findById(payload.id)\r\n                .then(function (contactInstance) {\r\n                contactInstance.update((_a = {},\r\n                    _a[payload.prop.key] = payload.prop.value,\r\n                    _a)).then();\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with: ' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createContact = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findById(payload.owner_id).then(function (instance) {\r\n                instance.models.Contact.create(payload.props).then(function (contactInstance) {\r\n                    resolve(contactInstance);\r\n                }, function (error) {\r\n                    reject('update error with' + error);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getNote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.findById(payload.id).then(function (notes) {\r\n                resolve(notes);\r\n                reject('error: no notes found');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getNotes = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.findAll()\r\n                .then(function (notes) {\r\n                resolve(notes);\r\n                reject('error: no notes found');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setNoteProp = function (payload) {\r\n        var _this = this;\r\n        var KEY = Object.keys(payload.prop)[0];\r\n        console.log('SET', KEY);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.update(payload.prop, {\r\n                where: {\r\n                    id: payload.id\r\n                }\r\n            }).then(function (response) {\r\n                _this.Note.findById(payload.id)\r\n                    .then(function (noteInstance) {\r\n                    console.log('RESPONSE SET NOTE', response);\r\n                    resolve(noteInstance);\r\n                });\r\n            }, function (error) { return reject('update error with' + error); });\r\n        }).catch(function (error) { return console.log('error on set', error); });\r\n    };\r\n    CRMStoreManager.prototype.createNote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findById(payload.owner_id).then(function (instance) {\r\n                instance.models.Note.create(payload.props).then(function (noteInstance) {\r\n                    resolve(noteInstance);\r\n                }, function (error) {\r\n                    reject('update error with' + error);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getQuote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findById(payload.id, {\r\n                include: [_this.QuoteLine]\r\n            }).then(function (quotesInstance) {\r\n                resolve(quotesInstance);\r\n            }, function (error) { return reject('error with find ID'); });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getQuotes = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findAll({\r\n                include: [_this.QuoteLine]\r\n            }).then(function (quotesInstance) {\r\n                resolve(quotesInstance);\r\n            }, function (error) { return reject('error with find ID'); });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setQuoteProp = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.update(payload.prop, {\r\n                where: { id: payload.id }\r\n            }).then(function (response) {\r\n                if (+response[0] === 1)\r\n                    _this.Quote.findById(payload.id, {\r\n                        include: [_this.QuoteLine]\r\n                    })\r\n                        .then(function (quoteInstance_find) {\r\n                        resolve(quoteInstance_find);\r\n                    });\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findById(payload.owner_id).then(function (instance) {\r\n                instance.models.Quote.create(payload.props).then(function (quoteInstance) {\r\n                    resolve(quoteInstance);\r\n                }, function (error) {\r\n                    reject('update error with' + error);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuoteLine = function (quoteId, quoteLine) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findById(quoteId)\r\n                .then(function (quoteInstance) {\r\n                quoteInstance.QuoteLine.create(quoteLine).then(function (quoteLineInstance) {\r\n                    resolve(quoteLineInstance);\r\n                });\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    return CRMStoreManager;\r\n}());\r\nexports.CRMStoreManager = CRMStoreManager;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction companyModel(DataTypes, sequlize) {\r\n    return sequlize.define('company', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        city: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        zip: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        web: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        fax: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        misc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.companyModel = companyModel;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction contactModel(DataTypes, sequlize) {\r\n    return sequlize.define('contact', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n            // required: true\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING\r\n        },\r\n        position: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.contactModel = contactModel;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction noteModel(DataTypes, sequlize) {\r\n    return sequlize.define('note', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        title: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        text: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.noteModel = noteModel;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteLineModel(DataTypes, sequlize) {\r\n    return sequlize.define('quoteLine', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n        },\r\n        weight: {\r\n            type: DataTypes.DOUBLE\r\n        },\r\n        isCentered: {\r\n            type: DataTypes.BOOLEAN\r\n        },\r\n        unit: {\r\n            type: DataTypes.STRING\r\n        },\r\n        cost: {\r\n            type: DataTypes.FLOAT\r\n        },\r\n        desc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.quoteLineModel = quoteLineModel;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteModel(DataTypes, sequlize) {\r\n    return sequlize.define('quote', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.quoteModel = quoteModel;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction userModel(DataTypes, sequlize) {\r\n    return sequlize.define('user', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        firstName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        lastName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        passHash: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        role: {\r\n            type: DataTypes.ENUM,\r\n            values: ['general', 'blocked', 'admin', 'removed'],\r\n            required: true\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING,\r\n            required: true\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessName: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessWeb: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessPhone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessFax: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.userModel = userModel;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"http\");\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"sequelize\");\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"socket.io\");\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// backend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bf7b220192d850e3c063","import {Server} from './app';\n\nfunction boot() {\n\tServer.bootstrap();\n}\n\nboot();\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import * as http from 'http';\nimport * as express from 'express';\nimport * as Socketio from 'socket.io';\nimport {CRMStoreManager} from './orm/store-manager';\nimport {Endpoints} from './endpoints/endpoints';\n\nexport class Server extends Endpoints {\n\tprivate app: express.Application;\n\tprivate server: express.Server;\n\tprivate IO;\n\tprivate port: number = 1729;\n\tprivate crmStoreManager: CRMStoreManager;\n\n\tpublic static bootstrap(): Server {\n\t\treturn new Server();\n\t}\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.app = express();\n\t\tthis.config();\n\t\tthis.endPoints();\n\t};\n\n\tprivate config(): void {\n\t\tthis.server = http.createServer(this.app);\n\t\tconsole.log('listening on port ' + this.port);\n\t\tthis.server.listen(this.port);\n\t\tthis.IO = Socketio(this.server);\n\t\tthis.crmStoreManager = new CRMStoreManager();\n\t}\n\n\tprivate endPoints(): void {\n\t\tthis.IO.on('connection', socket => {\n\t\t\tthis.socketOnCompanies(socket, this.crmStoreManager);\n\t\t\tthis.socketOnQuotes(socket, this.crmStoreManager);\n\t\t\tthis.socketOnContacts(socket, this.crmStoreManager);\n\t\t\tthis.socketOnUsers(socket, this.crmStoreManager);\n\t\t\tthis.socketOnNotes(socket, this.crmStoreManager);\n\t\t\tsocket.on('user.test.create', () => {\n\t\t\t\tthis.crmStoreManager\n\t\t\t\t\t.createTestUser()\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.test.create.response', user);\n\t\t\t\t\t})\n\t\t\t});\n\t\t})\n\t}\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","import {CRMStoreManager} from '../orm/store-manager';\nimport * as SocketIO from 'socket.io';\nimport {error} from 'util';\nimport {NoteAttributes} from '../orm/table-models/attributes/note.attributes';\nimport {QuoteAttributes} from '../orm/table-models/attributes/quote.attributes';\n\nexport class Endpoints {\n\tconstructor() {}\n\tpublic socketOnNotes(socket: SocketIO, crmStoreManager: CRMStoreManager): void {\n\t\tsocket.on('notes.create', (payload: any) => {\n\t\t\tif (payload){\n\t\t\t\tcrmStoreManager.createNote(payload)\n\t\t\t\t\t.then(note => {\n\t\t\t\t\t\tsocket.emit('notes.create.response', note);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('notes.create.response', {error: 'Cannot create without payload.'});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('notes.get', (payload?: any) => {\n\t\t\tif (payload && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.getNote(payload)\n\t\t\t\t\t.then(note => {\n\t\t\t\t\t\tsocket.emit('notes.get.response', note);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager.getNotes()\n\t\t\t\t\t.then((notes: NoteAttributes[])=> {\n\t\t\t\t\t\tsocket.emit('notes.get.response', notes);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('notes.set', (payload: any) => {\n\t\t\tcrmStoreManager.setNoteProp(payload)\n\t\t\t\t.then(response => {\n\t\t\t\t\tsocket.emit('notes.set.response', response);\n\t\t\t\t});\n\t\t})\n\t}\n\n\tpublic socketOnUsers(socket: SocketIO, crmStoreManager: CRMStoreManager){\n\t\tsocket.on('user.get', (payload?: any) => {\n\t\t\tif (payload && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.getUser(payload)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.get.response', user);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('user.get.response', {error: 'No ID in payload'})\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('user.set', (payload: any) => {\n\t\t\tcrmStoreManager.setUserProp(payload)\n\t\t\t\t.then(response => {\n\t\t\t\t\tconsole.log('res', response);\n\t\t\t\t\tsocket.emit('user.set.response', response);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t})\n\t}\n\n\tpublic socketOnQuotes(socket: SocketIO , crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('quotes.create', (payload: any) => {\n\t\t\tif (payload){\n\t\t\t\tcrmStoreManager.createQuote(payload)\n\t\t\t\t\t.then((quote: QuoteAttributes) => {\n\t\t\t\t\t\tsocket.emit('quotes.create.response', quote);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('quotes.get', (payload?: any) => {\n\t\t\tif(payload && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.getQuote(payload)\n\t\t\t\t\t.then(quotes => {\n\t\t\t\t\t\tsocket.emit('quotes.get.response', quotes);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager.getQuotes().then((quotes: QuoteAttributes[]) => {\n\t\t\t\t\tsocket.emit('quotes.get.response', quotes);\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('quotes.set', (payload: any) => {\n\t\t\tcrmStoreManager.setQuoteProp(payload).then(quotes => {\n\t\t\t\tsocket.emit('quotes.set.response', quotes);\n\t\t\t}, err => {\n\t\t\t\tconsole.log('error', err)\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic socketOnContacts(socket: SocketIO, crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('contacts.create', (payload?: any) => {\n\t\t\tif(payload) {\n\t\t\t\tcrmStoreManager.createContact(payload).then(contact => {\n\t\t\t\t\tsocket.emit('contacts.create.response', contact);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('contacts.get', (payload?: any) => {\n\t\t\tif (payload && typeof payload.id === 'string'){\n\t\t\t\tcrmStoreManager.getContact(payload)\n\t\t\t\t\t.then(contacts => {\n\t\t\t\t\t\tsocket.emit('contacts.get.response', payload);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager.getContacts()\n\t\t\t\t\t.then(contacts => {\n\t\t\t\t\t\tsocket.emit('contacts.get.response', contacts);\n\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('contacts.set', (payload: any) => {\n\t\t\tif(payload && typeof payload.id === 'string')\n\t\t\t\tcrmStoreManager.setContactProp(payload)\n\t\t\t\t.then(contacts => {\n\t\t\t\t\tsocket.emit('contacts.set.response', contacts);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic socketOnCompanies(socket: SocketIO, crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('companies.get', (payload?: any) => {\n\t\t\tif (payload && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.getCompany(payload)\n\t\t\t\t\t.then((companies: any) => {\n\t\t\t\t\t\tsocket.emit('companies.get.response', companies);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager.getCompanies()\n\t\t\t\t\t.then((companies: any) => {\n\t\t\t\t\t\tsocket.emit('companies.get.response', companies);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('companies.set', (payload: any) => {\n\t\t\tif (payload && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.setCompanyProp(payload)\n\t\t\t\t.then(company => {\n\t\t\t\t\tsocket.emit('companies.set.response', company);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('companies.set.response', {error: 'Error: No payload or id'});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('companies.create', (payload?: any) => {\n\t\t\tcrmStoreManager\n\t\t\t\t.createCompany(payload)\n\t\t\t\t.then(company => {\n\t\t\t\t\tsocket.emit('companies.create.response', company);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/endpoints/endpoints.ts","export interface DBConfig {\n\tusername: string;\n\tpassword: string;\n\tdatabase: string;\n\thost: string;\n\tdialect: string;\n\tpool: {\n\t\tmax: number,\n\t\tmin: number,\n\t\tidle: number\n\t}\n\tstorage: string;\n}\n\nexport const DB_CONFIG = {\n\tusername: 'rdev',\n\tpassword: '',\n\tdatabase: 'angular-bros-crm',\n\thost: 'localhost',\n\tdialect: 'sqlite',\n\tpool: {\n\t\tmax: 5,\n\t\tmin: 0,\n\t\tidle: 10000\n\t},\n\tstorage: './rdev.sql3'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/orm/config.ts","import * as sequelizeStatic from 'sequelize';\nimport {DBConfig, DB_CONFIG} from './config';\nimport {UserAttributes, UserInstance, UserModel} from './table-models/attributes/user.attributes';\nimport {CompanyAttributes, CompanyInstance, CompanyModel} from './table-models/attributes/company.attributes';\nimport {ContactAttributes, ContactInstance, ContactModel} from './table-models/attributes/contact.attributes';\nimport {NoteAttributes, NoteInstance, NoteModel} from './table-models/attributes/note.attributes';\nimport {QuoteAttributes, QuoteInstance, QuoteModel} from './table-models/attributes/quote.attributes';\nimport {QuoteLineModel} from './table-models/attributes/quote-line.attributes';\nimport {companyModel} from './table-models/company.table-model';\nimport {userModel} from './table-models/user.table-model';\nimport {contactModel} from './table-models/contact.table-model';\nimport {quoteLineModel} from './table-models/quote-line.table-model';\nimport {quoteModel} from './table-models/quote.table-model';\nimport {noteModel} from './table-models/note.table-model';\n\nexport interface StoreManager {\n\tgetUser(payload): Promise<UserAttributes>;\n\tcreateTestUser(): Promise<UserAttributes>;\n\tgetCompany(payload: any): Promise<CompanyAttributes[]>;\n\tsetCompanyProp(payload: any): Promise<CompanyAttributes>;\n\tcreateCompany(payload: any): Promise<CompanyAttributes>;\n\tgetContact(payload: any): Promise<ContactAttributes>;\n\tgetContacts(): Promise<ContactAttributes[]>;\n\tsetContactProp(payload: any): Promise<ContactAttributes>;\n\tcreateContact(payload: any): Promise<ContactAttributes>;\n\tgetNote(payload: any): Promise<NoteAttributes>\n\tgetNotes(): Promise<NoteAttributes[]>;\n\tsetNoteProp(payload: any): Promise<NoteAttributes>;\n\tcreateNote(payload: any): Promise<NoteAttributes>;\n\tgetQuotes(): Promise<QuoteAttributes[]>;\n\tgetQuote(payload: any): Promise<QuoteAttributes>;\n\tsetQuoteProp(payload): Promise<QuoteAttributes>;\n\tcreateQuote(payload: any): Promise<QuoteAttributes>;\n\tcreateQuoteLine(quoteId, quoteLine): Promise<any>;\n}\n\nexport class CRMStoreManager implements StoreManager{\n\tpublic sequelize: sequelizeStatic.Sequelize;\n\tpublic User: UserModel;\n\tpublic Company: CompanyModel;\n\tpublic Contact: ContactModel;\n\tpublic Note: NoteModel;\n\tpublic Quote: QuoteModel;\n\tpublic QuoteLine: QuoteLineModel;\n\tprivate _dbConfig: DBConfig = DB_CONFIG;\n\n\tconstructor() {\n\t\tthis.dbConfig(this._dbConfig);\n\t\tthis.modelsInit();\n\t}\n\n\tprivate modelsInit(): void {\n\t\tthis.User = userModel(sequelizeStatic, this.sequelize);\n\t\tthis.Company = companyModel(sequelizeStatic, this.sequelize);\n\t\tthis.Contact = contactModel(sequelizeStatic, this.sequelize);\n\t\tthis.Note = noteModel(sequelizeStatic, this.sequelize);\n\t\tthis.Quote = quoteModel(sequelizeStatic, this.sequelize);\n\t\tthis.QuoteLine = quoteLineModel(sequelizeStatic, this.sequelize);\n\t\tthis.User.hasMany(this.Company);\n\t\tthis.Contact.belongsTo(this.Company);\n\t\tthis.Contact.hasMany(this.Note);\n\t\tthis.Company.belongsTo(this.User);\n\t\tthis.Company.hasMany(this.Contact);\n\t\tthis.Company.hasMany(this.Quote);\n\t\tthis.Quote.belongsTo(this.Company);\n\t\tthis.Quote.hasMany(this.QuoteLine);\n\t\tthis.QuoteLine.belongsTo(this.Quote);\n\t}\n\n\tprivate dbConfig(config): void {\n\t\tthis.sequelize = new sequelizeStatic(config.database, config.username, config.password, {\n\t\t\thost: config.host,\n\t\t\tdialect: config.dialect,\n\t\t\tpool: {\n\t\t\t\tmax: config.pool.max,\n\t\t\t\tmin: config.pool.min,\n\t\t\t\tidle: config.pool.idle\n\t\t\t},\n\t\t\tstorage: config.storage\n\t\t});\n\t}\n\n\tprivate syncTable(): void {\n\t\tthis.sequelize.sync().then(() => {\n\t\t\tthis.User.create({\n\t\t\t\tfirstName: 'Test',\n\t\t\t\tlastName: 'Tester',\n\t\t\t\temail: 'test@tester.com',\n\t\t\t\trole: 'admin'\n\t\t\t\t})\n\t\t})\n\t}\n\n\tpublic getUser(payload): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(payload.id)\n\t\t\t\t.then((userInstance: UserInstance) => {\n\t\t\t\tconsole.log('user ', userInstance);\n\t\t\t\t\tresolve(userInstance);\n\t\t\t\t\treject('error with find ID');\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setUserProp(payload): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(payload.id).then(userInstance => {\n\t\t\t\tuserInstance.update({[payload.prop.key]: payload.prop.value})\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tconsole.log('user set', response);\n\t\t\t\t\t\tif(+response[0] === 1) {\n\t\t\t\t\t\t\tthis.User.findById(payload.id)\n\t\t\t\t\t\t\t\t.then((userInstance: UserInstance) => {\n\t\t\t\t\t\t\t\tresolve(userInstance);\n\t\t\t\t\t\t\t}, error => reject('user set prop error: ' + error))\n\t\t\t\t\t\t}\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\treject('update error with' + error);\n\t\t\t\t}).catch(error => console.log(error));\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic createTestUser(): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.sequelize.sync().then(instance => {\n\t\t\treturn instance.User.create({\n\t\t\t\t\temail: 'test@tester.com',\n\t\t\t\t\trole: 'general'\n\t\t\t\t})\n\t\t\t}).then(userInstance =>{\n\t\t\t\tresolve(userInstance);\n\t\t\t\treject('error with test user');\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic getCompany(payload: any): Promise<CompanyAttributes[]> {\n\t\tif (payload) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Company.findById(payload.id)\n\t\t\t\t\t.then((companiesInstance: CompanyInstance) => {\n\t\t\t\t\t\tresolve(companiesInstance);\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getCompanies(): Promise<CompanyAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findAll({\n\t\t\t\tinclude: [this.Contact, this.Quote]\n\t\t\t})\n\t\t\t\t.then((companies => {\n\t\t\t\t\tresolve(companies);\n\t\t\t\t\treject('error: no companies found');\n\t\t\t\t}));\n\t\t});\n\t}\n\n\tpublic setCompanyProp(payload): Promise<CompanyAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.update(payload.prop, {\n\t\t\t\twhere: {id: payload.id}\n\t\t\t}).then((response: any) => {\n\t\t\t\tif (+response[0] === 1) {\n\t\t\t\t\tthis.Company.findById(payload.id)\n\t\t\t\t\t\t.then((companyInstance: CompanyInstance) => {\n\t\t\t\t\t\tresolve(companyInstance);\n\t\t\t\t\t}, error => reject('Company set prop error :' + error))\n\t\t\t\t}}, error => {\n\t\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createCompany(payload: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.create(payload, {\n\t\t\t\tinclude: [this.Quote, this.Contact]\n\t\t\t}).then((companyInstance: CompanyInstance) => {\n\t\t\t\tresolve(companyInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\n\tpublic getContact(payload: any): Promise<ContactAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findById(payload.id)\n\t\t\t\t.then((contactsInstance: ContactInstance) => {\n\t\t\t\tresolve(contactsInstance);\n\t\t\t\treject('error with find ID');\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getContacts(): Promise<ContactAttributes[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findAll({\n\t\t\t\tinclude: [this.Note]\n\t\t\t}).then((contactInstances: ContactInstance[]) => {\n\t\t\t\tresolve(contactInstances);\n\t\t\t}, error => reject('error finding Contacts: ' + error));\n\t\t});\n\t}\n\n\tpublic setContactProp(payload): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findById(payload.id)\n\t\t\t\t.then((contactInstance: ContactInstance) => {\n\t\t\t\t\tcontactInstance.update({\n\t\t\t\t\t\t[payload.prop.key]:payload.prop.value\n\t\t\t\t\t}).then()\n\t\t\t\t}, error => {\n\t\t\t\t\treject('update error with: ' + error);\n\t\t\t\t});\n\t\t})\n\t}\n\n\tpublic createContact(payload: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findById(payload.owner_id).then((instance: any) => {\n\t\t\tinstance.models.Contact.create(payload.props).then((contactInstance: ContactInstance) => {\n\t\t\t\tresolve(contactInstance);\n\t\t\t\t}, error => {\n\t\t\t\t\t\treject('update error with' + error);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tpublic getNote(payload): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.findById(payload.id).then((notes: NoteInstance)=> {\n\t\t\t\tresolve(notes);\n\t\t\t\treject('error: no notes found');\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getNotes(): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.findAll()\n\t\t\t\t.then((notes: NoteInstance[])=> {\n\t\t\t\t\tresolve(notes);\n\t\t\t\t\treject('error: no notes found');\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setNoteProp(payload): Promise<NoteAttributes> {\n\t\tconst KEY = Object.keys(payload.prop)[0];\n\t\t\t\tconsole.log('SET', KEY);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.update(payload.prop, {\n\t\t\t\twhere: {\n\t\t\t\t\tid: payload.id\n\t\t\t}\n\t\t\t}).then((response: any) => {\n\t\t\t\tthis.Note.findById(payload.id)\n\t\t\t\t\t.then((noteInstance: NoteInstance) => {\n\t\t\t\t\tconsole.log('RESPONSE SET NOTE',response);\n\t\t\t\t\tresolve(noteInstance);\n\t\t\t\t})\n\t\t\t}, error => reject('update error with' + error))\n\t\t}).catch(error => console.log('error on set', error))\n\t}\n\n\tpublic createNote(payload: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findById(payload.owner_id).then((instance: any) => {\n\t\t\t\tinstance.models.Note.create(payload.props).then((noteInstance: NoteInstance) => {\n\t\t\t\t\tresolve(noteInstance);\n\t\t\t\t}, error => {\n\t\t\t\t\treject('update error with' + error);\n\t\t\t\t});\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic getQuote(payload: any): Promise<QuoteAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.findById(payload.id,{\n\t\t\t\tinclude:\n\t\t\t\t\t[this.QuoteLine]\n\t\t\t}).then((quotesInstance: QuoteInstance) => {\n\t\t\t\tresolve(quotesInstance);\n\t\t\t}, error => reject('error with find ID'));\n\t\t});\n\t}\n\tpublic getQuotes(): Promise<QuoteAttributes[]> {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findAll({\n\t\t\t\t\tinclude:\n\t\t\t\t\t\t[this.QuoteLine]\n\t\t\t\t}).then((quotesInstance: QuoteInstance[]) => {\n\t\t\t\t\tresolve(quotesInstance);\n\t\t\t\t}, error => reject('error with find ID'));\n\t\t\t});\n\t\t}\n\n\tpublic setQuoteProp(payload: any): Promise<QuoteAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.update(payload.prop, {\n\t\t\t\twhere:\n\t\t\t\t\t{id: payload.id}\n\t\t\t}).then((response: any) => {\n\t\t\t\tif(+response[0] === 1)\n\t\t\t\tthis.Quote.findById(payload.id, {\n\t\t\t\t\tinclude: [this.QuoteLine]\n\t\t\t\t})\n\t\t\t\t\t.then((quoteInstance_find:QuoteInstance) => {\n\t\t\t\t\t\tresolve(quoteInstance_find)\n\t\t\t\t\t})\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createQuote(payload: any): Promise<QuoteAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findById(payload.owner_id).then((instance: any) => {\n\t\t\t\tinstance.models.Quote.create(payload.props).then((quoteInstance: QuoteInstance) => {\n\t\t\t\t\tresolve(quoteInstance);\n\t\t\t\t}, error => {\n\t\t\t\t\treject('update error with' + error);\n\t\t\t\t});\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic createQuoteLine(quoteId, quoteLine): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.findById(quoteId)\n\t\t\t\t.then((quoteInstance: any) => {\n\t\t\t\tquoteInstance.QuoteLine.create(quoteLine).then(quoteLineInstance => {\n\t\t\t\t\tresolve(quoteLineInstance);\n\t\t\t\t})\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/orm/store-manager.ts","export function companyModel(DataTypes, sequlize) {\n\treturn sequlize.define('company', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcity: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tzip: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tweb: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tfax: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tmisc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/company.table-model.ts","export function contactModel(DataTypes, sequlize) {\n\treturn sequlize.define('contact', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t\t// required: true\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tposition: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/contact.table-model.ts","export function noteModel(DataTypes, sequlize) {\n\treturn sequlize.define('note', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\ttitle: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\ttext: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/note.table-model.ts","export function quoteLineModel(DataTypes, sequlize) {\n\treturn sequlize.define('quoteLine', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tweight: {\n\t\t\ttype: DataTypes.DOUBLE\n\t\t},\n\t\tisCentered: {\n\t\t\ttype: DataTypes.BOOLEAN\n\t\t},\n\t\tunit: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcost: {\n\t\t\ttype: DataTypes.FLOAT\n\t\t},\n\t\tdesc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote-line.table-model.ts","export function quoteModel(DataTypes, sequlize) {\n\treturn sequlize.define('quote', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote.table-model.ts","export function userModel(DataTypes, sequlize) {\n\treturn sequlize.define('user', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tfirstName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tlastName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tpassHash: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\trole: {\n\t\t\ttype: DataTypes.ENUM,\n\t\t\tvalues: ['general', 'blocked', 'admin', 'removed'],\n\t\t\trequired: true\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\trequired: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessName: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessWeb: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessPhone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessFax: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/user.table-model.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}