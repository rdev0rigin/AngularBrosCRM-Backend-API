{"version":3,"sources":["webpack:///backend.js","webpack:///webpack/bootstrap 679ae783835a1bc99c08","webpack:///./src/main.ts","webpack:///./src/app.ts","webpack:///./src/orm/config.ts","webpack:///./src/orm/store-manager.ts","webpack:///./src/orm/table-models/company.table-model.ts","webpack:///./src/orm/table-models/contact.table-model.ts","webpack:///./src/orm/table-models/note.table-model.ts","webpack:///./src/orm/table-models/quote-line.table-model.ts","webpack:///./src/orm/table-models/quote.table-model.ts","webpack:///./src/orm/table-models/user.table-model.ts","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"sequelize\"","webpack:///external \"socket.io\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","app_1","Server","bootstrap","http","express","Socketio","store_manager_1","config_1","this","port","app","config","endPoints","server","createServer","console","log","IO","listen","crmStoreManager","CRMStoreManager","dbConfig","_this","on","socket","createTestUser","then","user","emit","payload","getUser","id","setUserProp","prop","response","getCompanies","companies","setCompaniesProp","company","createContacts","contactProps","contact","getContacts","contacts","setContactsProp","getNotes","notes","setNotesProp","note","createNotes","props","createQuotes","quote","getQuotes","quotes","quoteProps","username","password","database","host","dialect","pool","max","min","idle","storage","sequelizeStatic","user_table_model_1","company_table_model_1","contact_table_model_1","quote_line_table_model_1","quote_table_model_1","note_table_model_1","modelsInit","syncTable","sequelize","sync","User","create","firstName","lastName","email","role","include","Company","Contact","Quote","QuoteLine","Note","Promise","resolve","reject","instance","userInstance","dataValues","userModel","companyModel","contactModel","noteModel","quoteModel","quoteLineModel","hasMany","belongsTo","findById","update","_a","key","error","companiesInstance","findAll","length","createCompany","companyInstance","contactsInstance","notesInstance","quotesInstance","setQuotesProp","createQuoteLine","quoteId","quoteLine","quoteInstance","quoteLineInstance","DataTypes","sequlize","define","type","UUID","primaryKey","defaultValue","UUIDV4","STRING","addressOne","addressTwo","city","zip","phone","web","fax","misc","created_at","DATE","allowNull","updated_at","deleted_at","freezeTableName","paranoid","underscored","position","title","text","weight","DOUBLE","isCentered","BOOLEAN","unit","cost","FLOAT","desc","passHash","ENUM","values","required","businessName","businessWeb","businessPhone","businessFax","require"],"mappings":"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","file":"backend.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar app_1 = __webpack_require__(1);\r\nfunction boot() {\r\n    app_1.Server.bootstrap();\r\n}\r\nboot();\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http = __webpack_require__(11);\r\nvar express = __webpack_require__(10);\r\nvar Socketio = __webpack_require__(13);\r\nvar store_manager_1 = __webpack_require__(3);\r\nvar config_1 = __webpack_require__(2);\r\nvar Server = (function () {\r\n    function Server() {\r\n        this.port = 1729;\r\n        this.app = express();\r\n        this.config();\r\n        this.endPoints();\r\n    }\r\n    Server.bootstrap = function () {\r\n        return new Server();\r\n    };\r\n    Server.prototype.config = function () {\r\n        this.server = http.createServer(this.app);\r\n        console.log('listening on port' + this.port);\r\n        this.IO = Socketio(this.server);\r\n        this.server.listen(this.port);\r\n        this.crmStoreManager = new store_manager_1.CRMStoreManager(config_1.dbConfig);\r\n    };\r\n    Server.prototype.endPoints = function () {\r\n        var _this = this;\r\n        this.IO.on('connection', function (socket) {\r\n            socket.on('user.test.create', function () {\r\n                _this.crmStoreManager\r\n                    .createTestUser()\r\n                    .then(function (user) {\r\n                    socket.emit('user.test.create.response', user);\r\n                });\r\n            });\r\n            socket.on('user.get', function (payload) {\r\n                console.log('user.get', payload);\r\n                _this.crmStoreManager\r\n                    .getUser(payload.id)\r\n                    .then(function (user) {\r\n                    socket.emit('user.get.response', user);\r\n                });\r\n            });\r\n            socket.on('user.set', function (payload) {\r\n                _this.crmStoreManager\r\n                    .setUserProp(payload.id, payload.prop)\r\n                    .then(function (response) {\r\n                    socket.emit('user.set.response', response);\r\n                });\r\n            });\r\n            socket.on('companies.get', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.getCompanies(payload.id)\r\n                    .then(function (companies) {\r\n                    socket.emit('companies.get.response', companies);\r\n                });\r\n            });\r\n            socket.on('companies.post', function (payload) {\r\n                _this.crmStoreManager.setCompaniesProp(payload.id, payload.prop).then(function (company) {\r\n                    console.log('payload 0', payload);\r\n                    socket.emit('companies.post.response', company);\r\n                });\r\n            });\r\n            socket.on('companies.create', function (payload) {\r\n                _this.crmStoreManager.setCompaniesProp(payload.id, payload.prop).then(function (company) {\r\n                    console.log('payload 0', payload);\r\n                    socket.emit('companies.post.response', company);\r\n                });\r\n            });\r\n            socket.on('contacts.create', function (payload) {\r\n                _this.crmStoreManager.createContacts(payload.contactProps).then(function (contact) {\r\n                    console.log('payload 0', payload);\r\n                    socket.emit('contacts.post.response', contact);\r\n                });\r\n            });\r\n            socket.on('contacts.get', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.getContacts()\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.get.response', contacts);\r\n                });\r\n            });\r\n            socket.on('contacts.post', function (payload) {\r\n                _this.crmStoreManager.setContactsProp(payload.id, payload.prop)\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.post.response', contacts);\r\n                });\r\n                console.log('payload 0', payload);\r\n            });\r\n            socket.on('notes.get', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.getNotes(payload.id || '').then(function (notes) {\r\n                    socket.emit('notes.get.response', notes);\r\n                });\r\n            });\r\n            socket.on('notes.post', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.setNotesProp(payload.id, payload.prop).then(function (note) {\r\n                    socket.emit('notes.post.response', note);\r\n                });\r\n            });\r\n            socket.on('notes.create', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.createNotes(payload.props).then(function (note) {\r\n                    socket.emit('notes.post.response', note);\r\n                });\r\n            });\r\n            socket.on('quotes.create', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.createQuotes(payload.props).then(function (quote) {\r\n                    socket.emit('quotes.post.response', quote);\r\n                });\r\n            });\r\n            socket.on('quotes.get', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.getQuotes(payload.id || '').then(function (quotes) {\r\n                    socket.emit('quotes.get.response', quotes);\r\n                });\r\n            });\r\n            socket.on('quotes.post', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.createQuotes(payload.quoteProps).then(function (quotes) {\r\n                    socket.emit('quotes.post.response', quotes);\r\n                });\r\n            });\r\n            socket.on('quotes.post', function (payload) {\r\n                console.log('payload 0', payload);\r\n                _this.crmStoreManager.createQuotes(payload.quoteProps).then(function (quotes) {\r\n                    socket.emit('quotes.post.response', quotes);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    return Server;\r\n}());\r\nexports.Server = Server;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.dbConfig = {\r\n    username: 'rdev',\r\n    password: '',\r\n    database: 'angular-bros-crm',\r\n    host: 'localhost',\r\n    dialect: 'sqlite',\r\n    pool: {\r\n        max: 5,\r\n        min: 0,\r\n        idle: 10000\r\n    },\r\n    storage: './rdev.sql3'\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar sequelizeStatic = __webpack_require__(12);\r\nvar user_table_model_1 = __webpack_require__(9);\r\nvar company_table_model_1 = __webpack_require__(4);\r\nvar contact_table_model_1 = __webpack_require__(5);\r\nvar quote_line_table_model_1 = __webpack_require__(7);\r\nvar quote_table_model_1 = __webpack_require__(8);\r\nvar note_table_model_1 = __webpack_require__(6);\r\nvar CRMStoreManager = (function () {\r\n    function CRMStoreManager(config) {\r\n        this.config = config;\r\n        this.dbConfig();\r\n        this.modelsInit();\r\n    }\r\n    CRMStoreManager.prototype.syncTable = function () {\r\n        var _this = this;\r\n        this.sequelize.sync().then(function () {\r\n            _this.User.create({\r\n                firstName: 'Test',\r\n                lastName: 'Tester',\r\n                email: 'test@tester.com',\r\n                role: 'admin'\r\n            }, {\r\n                include: [_this.Company, _this.Contact, _this.Quote, _this.QuoteLine, _this.Note]\r\n                // this.Company.create({\r\n                // email: 'test@company.com'},\r\n                // {\r\n                // \t// include: [\r\n                // \t// \tthis.Quote.create({\r\n                // \t// \tname: 'test quote',\r\n                // \t// \t}, {\r\n                // \t// \tinclude: [\r\n                // \t// \t\tthis.QuoteLine.create({\r\n                // \t// \t\t\tdesc: 'quote line 0'\r\n                // \t// \t\t})\r\n                // \t// \t]})\r\n                // \t// ]\r\n                // })\r\n                // ]\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createTestUser = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.sequelize.sync().then(function (instance) {\r\n                _this.User.create({\r\n                    email: 'test@tester.com',\r\n                    role: 'general'\r\n                });\r\n            }).then(function (userInstance) {\r\n                resolve(userInstance.dataValues);\r\n                reject('error with test user');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.modelsInit = function () {\r\n        this.User = user_table_model_1.userModel(sequelizeStatic, this.sequelize);\r\n        this.Company = company_table_model_1.companyModel(sequelizeStatic, this.sequelize);\r\n        this.Contact = contact_table_model_1.contactModel(sequelizeStatic, this.sequelize);\r\n        this.Note = note_table_model_1.noteModel(sequelizeStatic, this.sequelize);\r\n        this.Quote = quote_table_model_1.quoteModel(sequelizeStatic, this.sequelize);\r\n        this.QuoteLine = quote_line_table_model_1.quoteLineModel(sequelizeStatic, this.sequelize);\r\n        this.User.hasMany(this.Company);\r\n        this.Company.belongsTo(this.User);\r\n        this.Company.hasMany(this.Contact);\r\n        this.Contact.belongsTo(this.Company);\r\n        this.Quote.belongsTo(this.Company);\r\n        this.Quote.hasMany(this.QuoteLine);\r\n        this.QuoteLine.belongsTo(this.Quote);\r\n        this.Company.hasMany(this.Quote);\r\n        this.Contact.hasMany(this.Note);\r\n        // this.Contact = contactModel(sequelizeStatic, this.sequelize);\r\n        // this.Resume.hasOne(this.Experience);\r\n    };\r\n    CRMStoreManager.prototype.dbConfig = function () {\r\n        this.sequelize = new sequelizeStatic(this.config.database, this.config.username, this.config.password, {\r\n            host: this.config.host,\r\n            dialect: this.config.dialect,\r\n            pool: {\r\n                max: this.config.pool.max,\r\n                min: this.config.pool.min,\r\n                idle: this.config.pool.idle\r\n            },\r\n            storage: this.config.storage\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getUser = function (id) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(id).then(function (userInstance) {\r\n                if (userInstance && userInstance.dataValues.id) {\r\n                    resolve(userInstance.dataValues);\r\n                }\r\n                else {\r\n                    reject('error with find ID');\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setUserProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(id).then(function (userInstance) {\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getCompanies = function (id) {\r\n        var _this = this;\r\n        if (id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Company.findById(id).then(function (companiesInstance) {\r\n                    if (companiesInstance && companiesInstance.dataValues.id) {\r\n                        resolve(companiesInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Company.findAll().then((function (companies) {\r\n                    if (companies.length > 0) {\r\n                        resolve(companies);\r\n                    }\r\n                    else {\r\n                        reject('error: no companies found');\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setCompaniesProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findById(id).then(function (userInstance) {\r\n                console.log('found company', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createCompany = function (company) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.create(company).then(function (companyInstance) {\r\n                resolve(companyInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getContacts = function (id) {\r\n        var _this = this;\r\n        if (id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Contact.findById(id).then(function (contactsInstance) {\r\n                    if (contactsInstance && contactsInstance.dataValues.id) {\r\n                        resolve(contactsInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Contact.findAll().then((function (contacts) {\r\n                    if (contacts.length > 0) {\r\n                        resolve(contacts);\r\n                    }\r\n                    else {\r\n                        reject('error: no contacts found');\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setContactsProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findById(id).then(function (userInstance) {\r\n                console.log('found contact', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createContacts = function (company) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.create(company).then(function (companyInstance) {\r\n                resolve(companyInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getNotes = function (id) {\r\n        var _this = this;\r\n        if (id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Note.findById(id).then(function (notesInstance) {\r\n                    if (notesInstance && notesInstance.dataValues.id) {\r\n                        resolve(notesInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Note.findAll().then((function (notes) {\r\n                    if (notes.length > 0) {\r\n                        resolve(notes);\r\n                    }\r\n                    else {\r\n                        reject('error: no notes found');\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setNotesProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.findById(id).then(function (userInstance) {\r\n                console.log('found note', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createNotes = function (company) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.create(company).then(function (companyInstance) {\r\n                resolve(companyInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getQuotes = function (id) {\r\n        var _this = this;\r\n        if (id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Quote.findById(id, {\r\n                    include: [_this.QuoteLine]\r\n                }).then(function (quotesInstance) {\r\n                    if (quotesInstance && quotesInstance.dataValues.id) {\r\n                        resolve(quotesInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Quote.findAll({\r\n                    include: [_this.QuoteLine]\r\n                }).then((function (quotes) {\r\n                    if (quotes.length > 0) {\r\n                        resolve(quotes);\r\n                    }\r\n                    else {\r\n                        reject('error: no quotes found');\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setQuotesProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findById(id).then(function (userInstance) {\r\n                console.log('found quote', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuotes = function (quotes) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.create(quotes).then(function (companyInstance) {\r\n                resolve(companyInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuoteLine = function (quoteId, quoteLine) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findById(quoteId).then(function (quoteInstance) {\r\n                quoteInstance.QuoteLine.create(quoteLine).then(function (quoteLineInstance) {\r\n                    resolve(quoteLineInstance);\r\n                });\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    return CRMStoreManager;\r\n}());\r\nexports.CRMStoreManager = CRMStoreManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction companyModel(DataTypes, sequlize) {\r\n    return sequlize.define('company', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        city: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        zip: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        web: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        fax: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        misc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.companyModel = companyModel;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction contactModel(DataTypes, sequlize) {\r\n    return sequlize.define('contact', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n            // required: true\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING\r\n        },\r\n        position: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.contactModel = contactModel;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction noteModel(DataTypes, sequlize) {\r\n    return sequlize.define('note', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        title: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        text: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.noteModel = noteModel;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteLineModel(DataTypes, sequlize) {\r\n    return sequlize.define('quoteLine', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n        },\r\n        weight: {\r\n            type: DataTypes.DOUBLE\r\n        },\r\n        isCentered: {\r\n            type: DataTypes.BOOLEAN\r\n        },\r\n        unit: {\r\n            type: DataTypes.STRING\r\n        },\r\n        cost: {\r\n            type: DataTypes.FLOAT\r\n        },\r\n        desc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.quoteLineModel = quoteLineModel;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteModel(DataTypes, sequlize) {\r\n    return sequlize.define('quote', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.quoteModel = quoteModel;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction userModel(DataTypes, sequlize) {\r\n    return sequlize.define('user', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        firstName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        lastName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        passHash: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        role: {\r\n            type: DataTypes.ENUM,\r\n            values: ['general', 'blocked', 'admin', 'removed'],\r\n            required: true\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING,\r\n            required: true\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessName: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessWeb: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessPhone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessFax: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.userModel = userModel;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"http\");\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"sequelize\");\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"socket.io\");\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// backend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 679ae783835a1bc99c08","import {Server} from './app';\n\nfunction boot() {\n\tServer.bootstrap();\n}\n\nboot();\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import * as http from 'http';\nimport * as express from 'express';\nimport * as Socketio from 'socket.io';\nimport {CRMStoreManager} from './orm/store-manager';\nimport {ResponseObject} from './models/response-object.model';\nimport {dbConfig} from './orm/config';\n\nexport class Server {\n\tprivate app: express.Application;\n\tprivate server;\n\tprivate IO;\n\tprivate port: number = 1729;\n\tprivate crmStoreManager: CRMStoreManager;\n\n\tpublic static bootstrap(): Server {\n\t\treturn new Server();\n\t}\n\n\tconstructor() {\n\t\tthis.app = express();\n\t\tthis.config();\n\t\tthis.endPoints();\n\t}\n\n\tprivate config(): void {\n\t\tthis.server = http.createServer(this.app);\n\t\tconsole.log('listening on port' + this.port);\n\t\tthis.IO = Socketio(this.server);\n\t\tthis.server.listen(this.port);\n\t\tthis.crmStoreManager = new CRMStoreManager(dbConfig);\n\t}\n\n\tprivate endPoints(): void {\n\t\tthis.IO.on('connection', socket => {\n\t\t\tsocket.on('user.test.create', () => {\n\t\t\t\tthis.crmStoreManager\n\t\t\t\t\t.createTestUser()\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.test.create.response', user);\n\t\t\t\t\t})\n\t\t\t});\n\n\t\t\tsocket.on('user.get', payload => {\n\t\t\t\tconsole.log('user.get', payload);\n\t\t\t\tthis.crmStoreManager\n\t\t\t\t\t.getUser(payload.id)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.get.response' , user);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('user.set', payload => {\n\t\t\t\tthis.crmStoreManager\n\t\t\t\t\t.setUserProp(payload.id, payload.prop)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tsocket.emit('user.set.response', response);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('companies.get', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.getCompanies(payload.id)\n\t\t\t\t\t.then((companies) => {\n\t\t\t\t\tsocket.emit('companies.get.response', companies);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('companies.post', payload => {\n\t\t\t\tthis.crmStoreManager.setCompaniesProp(payload.id, payload.prop).then(company => {\n\t\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\t\tsocket.emit('companies.post.response', company);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('companies.create', payload => {\n\t\t\t\tthis.crmStoreManager.setCompaniesProp(payload.id, payload.prop).then(company => {\n\t\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\t\tsocket.emit('companies.post.response', company);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('contacts.create', payload => {\n\t\t\t\tthis.crmStoreManager.createContacts(payload.contactProps).then(contact => {\n\t\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\t\tsocket.emit('contacts.post.response', contact);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('contacts.get', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.getContacts()\n\t\t\t\t\t.then(contacts=> {socket.emit('contacts.get.response', contacts);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('contacts.post', payload => {\n\t\t\t\tthis.crmStoreManager.setContactsProp(payload.id, payload.prop)\n\t\t\t\t\t.then(contacts => {socket.emit('contacts.post.response', contacts);\n\t\t\t\t});\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t});\n\n\t\t\tsocket.on('notes.get', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.getNotes(payload.id || '').then(notes => {\n\t\t\t\t\tsocket.emit('notes.get.response', notes);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('notes.post', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.setNotesProp(payload.id, payload.prop).then(note => {\n\t\t\t\t\tsocket.emit('notes.post.response', note)\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('notes.create', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.createNotes(payload.props).then(note => {\n\t\t\t\t\tsocket.emit('notes.post.response', note)\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('quotes.create', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.createQuotes(payload.props).then(quote => {\n\t\t\t\t\tsocket.emit('quotes.post.response', quote);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('quotes.get', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.getQuotes(payload.id || '').then(quotes => {\n\t\t\t\t\tsocket.emit('quotes.get.response', quotes);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('quotes.post', payload => {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tthis.crmStoreManager.createQuotes(payload.quoteProps).then(quotes => {\n\t\t\t\t\tsocket.emit('quotes.post.response', quotes);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsocket.on('quotes.post', payload => {\n\t\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\t\tthis.crmStoreManager.createQuotes(payload.quoteProps).then(quotes => {\n\t\t\t\t\t\tsocket.emit('quotes.post.response', quotes);\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","export interface DBConfig {\n\tusername: string;\n\tpassword: string;\n\tdatabase: string;\n\thost: string;\n\tdialect: string;\n\tpool: {\n\t\tmax: number,\n\t\tmin: number,\n\t\tidle: number\n\t}\n\tstorage: string;\n}\n\nexport const dbConfig = {\n\tusername: 'rdev',\n\tpassword: '',\n\tdatabase: 'angular-bros-crm',\n\thost: 'localhost',\n\tdialect: 'sqlite',\n\tpool: {\n\t\tmax: 5,\n\t\tmin: 0,\n\t\tidle: 10000\n\t},\n\tstorage: './rdev.sql3'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/orm/config.ts","import * as sequelizeStatic from 'sequelize';\nimport {DBConfig} from './config';\nimport {userModel} from './table-models/user.table-model';\nimport {UserAttributes, UserModel} from './table-models/attributes/user.attributes';\nimport {companyModel} from './table-models/company.table-model';\nimport {CompanyModel} from './table-models/attributes/company.attributes';\nimport {ContactModel} from './table-models/attributes/contact.attributes';\nimport {NoteModel} from './table-models/attributes/note.attributes';\nimport {QuoteModel} from './table-models/attributes/quote.attributes';\nimport {QuoteLineModel} from './table-models/attributes/quote-line.attributes';\nimport {contactModel} from './table-models/contact.table-model';\nimport {quoteLineModel} from './table-models/quote-line.table-model';\nimport {quoteModel} from './table-models/quote.table-model';\nimport {noteModel} from './table-models/note.table-model';\n\nexport interface StoreManager {\n\tgetUser(id: string): Promise<any>;\n\t// getUserState(): Promise<any>;\n\tsetUserProp(id: string, prop: string | number): Promise<any>;\n\t// registerUser(user: UserAttributes): void;\n\t// deleteUser(): Promise<any>;\n\tcreateTestUser(): Promise<any>;\n}\n\nexport class CRMStoreManager implements StoreManager {\n\tpublic sequelize: sequelizeStatic.Sequelize;\n\tpublic User: UserModel;\n\tpublic Company: CompanyModel;\n\tpublic Contact: ContactModel;\n\tpublic Note: NoteModel;\n\tpublic Quote: QuoteModel;\n\tpublic QuoteLine: QuoteLineModel;\n\n\tconstructor(private config: DBConfig) {\n\t\tthis.dbConfig();\n\t\tthis.modelsInit();\n\t}\n\n\tprivate syncTable(): void {\n\t\tthis.sequelize.sync().then(() => {\n\t\t\tthis.User.create({\n\t\t\t\tfirstName: 'Test',\n\t\t\t\tlastName: 'Tester',\n\t\t\t\temail: 'test@tester.com',\n\t\t\t\trole: 'admin'\n\t\t\t\t},{\n\t\t\t\tinclude: [this.Company, this.Contact, this.Quote, this.QuoteLine, this.Note]\n\t\t\t\t\t// this.Company.create({\n\t\t\t\t\t// email: 'test@company.com'},\n\t\t\t\t\t// {\n\t\t\t\t\t// \t// include: [\n\t\t\t\t\t// \t// \tthis.Quote.create({\n\t\t\t\t\t// \t// \tname: 'test quote',\n\t\t\t\t\t// \t// \t}, {\n\t\t\t\t\t// \t// \tinclude: [\n\t\t\t\t\t// \t// \t\tthis.QuoteLine.create({\n\t\t\t\t\t// \t// \t\t\tdesc: 'quote line 0'\n\t\t\t\t\t// \t// \t\t})\n\t\t\t\t\t// \t// \t]})\n\t\t\t\t\t// \t// ]\n\t\t\t\t\t// })\n\t\t\t\t// ]\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic createTestUser(): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.sequelize.sync().then(instance => {\n\t\t\t\tthis.User.create({\n\t\t\t\t\temail: 'test@tester.com',\n\t\t\t\t\trole: 'general'\n\t\t\t\t})\n\t\t\t}).then(userInstance =>{\n\t\t\t\tresolve(userInstance.dataValues);\n\t\t\t\treject('error with test user');\n\t\t\t})\n\t\t})\n\t}\n\n\tprivate modelsInit(): void {\n\t\tthis.User = userModel(sequelizeStatic, this.sequelize);\n\t\tthis.Company = companyModel(sequelizeStatic, this.sequelize);\n\t\tthis.Contact = contactModel(sequelizeStatic, this.sequelize);\n\t\tthis.Note = noteModel(sequelizeStatic, this.sequelize);\n\t\tthis.Quote = quoteModel(sequelizeStatic, this.sequelize);\n\t\tthis.QuoteLine = quoteLineModel(sequelizeStatic, this.sequelize);\n\t\tthis.User.hasMany(this.Company);\n\t\tthis.Company.belongsTo(this.User);\n\t\tthis.Company.hasMany(this.Contact);\n\t\tthis.Contact.belongsTo(this.Company);\n\t\tthis.Quote.belongsTo(this.Company);\n\t\tthis.Quote.hasMany(this.QuoteLine);\n\t\tthis.QuoteLine.belongsTo(this.Quote);\n\t\tthis.Company.hasMany(this.Quote);\n\t\tthis.Contact.hasMany(this.Note);\n\t\t// this.Contact = contactModel(sequelizeStatic, this.sequelize);\n\t\t// this.Resume.hasOne(this.Experience);\n\t}\n\n\tprivate dbConfig(): void {\n\t\tthis.sequelize = new sequelizeStatic(this.config.database, this.config.username, this.config.password, {\n\t\t\thost: this.config.host,\n\t\t\tdialect: this.config.dialect,\n\t\t\tpool: {\n\t\t\t\tmax: this.config.pool.max,\n\t\t\t\tmin: this.config.pool.min,\n\t\t\t\tidle: this.config.pool.idle\n\t\t\t},\n\t\t\tstorage: this.config.storage\n\t\t});\n\t}\n\n\tpublic getUser(id): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(id).then((userInstance: any) => {\n\t\t\t\tif (userInstance && userInstance.dataValues.id) {\n\t\t\t\t\tresolve(userInstance.dataValues);\n\t\t\t\t} else {\n\t\t\t\t\treject('error with find ID');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic setUserProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(id).then(userInstance => {\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getCompanies(id?: string): Promise<any> {\n\t\tif(id) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Company.findById(id).then((companiesInstance: any) => {\n\t\t\t\t\tif (companiesInstance && companiesInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(companiesInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Company.findAll().then((companies => {\n\t\t\t\t\tif (companies.length > 0) {\n\t\t\t\t\t\tresolve(companies)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error: no companies found');\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setCompaniesProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found company', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createCompany(company: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.create(company).then((companyInstance: any) => {\n\t\t\t\tresolve(companyInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getContacts(id?: string): Promise<any> {\n\t\tif(id) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Contact.findById(id).then((contactsInstance: any) => {\n\t\t\t\t\tif (contactsInstance && contactsInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(contactsInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Contact.findAll().then((contacts => {\n\t\t\t\t\tif (contacts.length > 0) {\n\t\t\t\t\t\tresolve(contacts)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error: no contacts found');\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setContactsProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found contact', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createContacts(company: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.create(company).then((companyInstance: any) => {\n\t\t\t\tresolve(companyInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getNotes(id?: string): Promise<any> {\n\t\tif(id) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Note.findById(id).then((notesInstance: any) => {\n\t\t\t\t\tif (notesInstance && notesInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(notesInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Note.findAll().then((notes => {\n\t\t\t\t\tif (notes.length > 0) {\n\t\t\t\t\t\tresolve(notes)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error: no notes found');\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setNotesProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found note', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createNotes(company: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.create(company).then((companyInstance: any) => {\n\t\t\t\tresolve(companyInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getQuotes(id?: string): Promise<any> {\n\t\tif(id) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findById(id, {\n\t\t\t\t\tinclude:[this.QuoteLine]\n\t\t\t\t}).then((quotesInstance: any) => {\n\t\t\t\t\tif (quotesInstance && quotesInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(quotesInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findAll({\n\t\t\t\t\tinclude: [this.QuoteLine]\n\t\t\t\t}).then((quotes => {\n\t\t\t\t\tif (quotes.length > 0) {\n\t\t\t\t\t\tresolve(quotes)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error: no quotes found');\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setQuotesProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found quote', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createQuotes(quotes: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.create(quotes).then((companyInstance: any) => {\n\t\t\t\tresolve(companyInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createQuoteLine(quoteId, quoteLine): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findById(quoteId).then((quoteInstance: any) => {\n\t\t\t\t\tquoteInstance.QuoteLine.create(quoteLine).then(quoteLineInstance => {\n\t\t\t\t\t\tresolve(quoteLineInstance);\n\t\t\t\t\t})\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\t// public registerUser(user: UserAttributes): Promise<UserAttributes> {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\t//todo send to Auth for response\n\t// \t\t\tif (authUser.passHash && authUser.role) {\n\t// \t\t\t\tthis.createUser(authUser).then(userInstance => {\n\t// \t\t\t\t\tif (userInstance.id) {\n\t// \t\t\t\t\t\tresolve(userInstance);\n\t// \t\t\t\t\t} else {\n\t// \t\t\t\t\t\treject('error with registration');\n\t// \t\t\t\t\t}\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t});\n\t// }\n\n\t// private createUser(user: UserAttributes): Promise<any> {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\tthis.User.create({\n\t// \t\t\tfirstName: user.firstName,\n\t// \t\t\tlastName: user.lastName,\n\t// \t\t\tpassHash: user.passHash,\n\t// \t\t\temail: user.email,\n\t// \t\t\taddressOne: user.addressOne,\n\t// \t\t\taddressTwo: user.addressTwo,\n\t// \t\t\tphone: user.phone,\n\t// \t\t\trole: user.role,\n\t// \t\t\tbusinessName: user.businessName,\n\t// \t\t\tbusinessWeb: user.businessWeb,\n\t// \t\t\tbusinessPhone: user.businessPhone,\n\t// \t\t\tbusinessFax: user.businessFax,\n\t// \t\t}).then(userInstance => {\n\t// \t\t\tconsole.log('user', userInstance);\n\t// \t\t\treturn userInstance;\n\t// \t\t})\n\t// \t})\n\t// }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/store-manager.ts","export function companyModel(DataTypes, sequlize) {\n\treturn sequlize.define('company', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcity: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tzip: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tweb: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tfax: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tmisc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/company.table-model.ts","export function contactModel(DataTypes, sequlize) {\n\treturn sequlize.define('contact', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t\t// required: true\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tposition: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/contact.table-model.ts","export function noteModel(DataTypes, sequlize) {\n\treturn sequlize.define('note', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\ttitle: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\ttext: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/note.table-model.ts","export function quoteLineModel(DataTypes, sequlize) {\n\treturn sequlize.define('quoteLine', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tweight: {\n\t\t\ttype: DataTypes.DOUBLE\n\t\t},\n\t\tisCentered: {\n\t\t\ttype: DataTypes.BOOLEAN\n\t\t},\n\t\tunit: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcost: {\n\t\t\ttype: DataTypes.FLOAT\n\t\t},\n\t\tdesc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote-line.table-model.ts","export function quoteModel(DataTypes, sequlize) {\n\treturn sequlize.define('quote', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote.table-model.ts","export function userModel(DataTypes, sequlize) {\n\treturn sequlize.define('user', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tfirstName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tlastName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tpassHash: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\trole: {\n\t\t\ttype: DataTypes.ENUM,\n\t\t\tvalues: ['general', 'blocked', 'admin', 'removed'],\n\t\t\trequired: true\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\trequired: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessName: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessWeb: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessPhone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessFax: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/user.table-model.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}