{"version":3,"sources":["webpack:///backend.js","webpack:///webpack/bootstrap 06a58fc15052d5bb0aac","webpack:///./src/main.ts","webpack:///./src/app.ts","webpack:///./src/endpoints/endpoints.ts","webpack:///./src/orm/config.ts","webpack:///./src/orm/store-manager.ts","webpack:///./src/orm/table-models/company.table-model.ts","webpack:///./src/orm/table-models/contact.table-model.ts","webpack:///./src/orm/table-models/note.table-model.ts","webpack:///./src/orm/table-models/quote-line.table-model.ts","webpack:///./src/orm/table-models/quote.table-model.ts","webpack:///./src/orm/table-models/user.table-model.ts","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"sequelize\"","webpack:///external \"socket.io\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","app_1","Server","bootstrap","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","http","express","Socketio","store_manager_1","config_1","endpoints_1","_super","_this","port","app","config","endPoints","server","createServer","console","log","listen","IO","crmStoreManager","CRMStoreManager","dbConfig","on","socket","socketOnCompanies","socketOnQuotes","socketOnContacts","socketOnUsers","socketOnNotes","createTestUser","then","user","emit","Endpoints","payload","id","getnote","note","error","getNote","setNoteProp","prop","response","getUser","setUserProp","quoteProp","createQuotes","props","quote","getQuotes","quotes","quoteProps","createContacts","contact","getContacts","contacts","setContactsProp","getCompanies","companies","err","setCompaniesProp","company","createCompany","username","password","database","host","dialect","pool","max","min","idle","storage","sequelizeStatic","user_table_model_1","company_table_model_1","contact_table_model_1","quote_line_table_model_1","quote_table_model_1","note_table_model_1","modelsInit","syncTable","sequelize","sync","User","firstName","lastName","email","role","Promise","resolve","reject","instance","userInstance","userModel","Company","companyModel","Contact","contactModel","Note","noteModel","Quote","quoteModel","QuoteLine","quoteLineModel","hasMany","belongsTo","findById","dataValues","update","_a","key","companiesInstance","findAll","include","companyInstance","contactsInstance","length","contactInstance","getNotes","notesInstance","notes","createNotes","noteInstance","quotesInstance","setQuotesProp","quoteInstance","createQuoteLine","quoteId","quoteLine","quoteLineInstance","DataTypes","sequlize","define","type","UUID","primaryKey","defaultValue","UUIDV4","STRING","addressOne","addressTwo","city","zip","phone","web","fax","misc","created_at","DATE","allowNull","updated_at","deleted_at","freezeTableName","paranoid","underscored","position","title","text","weight","DOUBLE","isCentered","BOOLEAN","unit","cost","FLOAT","desc","passHash","ENUM","values","required","businessName","businessWeb","businessPhone","businessFax","require"],"mappings":"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","file":"backend.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 15);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar app_1 = __webpack_require__(1);\r\nfunction boot() {\r\n    app_1.Server.bootstrap();\r\n}\r\nboot();\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http = __webpack_require__(12);\r\nvar express = __webpack_require__(11);\r\nvar Socketio = __webpack_require__(14);\r\nvar store_manager_1 = __webpack_require__(4);\r\nvar config_1 = __webpack_require__(3);\r\nvar endpoints_1 = __webpack_require__(2);\r\nvar Server = (function (_super) {\r\n    __extends(Server, _super);\r\n    function Server() {\r\n        var _this = _super.call(this) || this;\r\n        _this.port = 1729;\r\n        _this.app = express();\r\n        _this.config();\r\n        _this.endPoints();\r\n        return _this;\r\n    }\r\n    Server.bootstrap = function () {\r\n        return new Server();\r\n    };\r\n    ;\r\n    Server.prototype.config = function () {\r\n        this.server = http.createServer(this.app);\r\n        console.log('listening on port ' + this.port);\r\n        this.server.listen(this.port);\r\n        this.IO = Socketio(this.server);\r\n        this.crmStoreManager = new store_manager_1.CRMStoreManager(config_1.dbConfig);\r\n    };\r\n    Server.prototype.endPoints = function () {\r\n        var _this = this;\r\n        this.IO.on('connection', function (socket) {\r\n            _this.socketOnCompanies(socket, _this.crmStoreManager);\r\n            _this.socketOnQuotes(socket, _this.crmStoreManager);\r\n            _this.socketOnContacts(socket, _this.crmStoreManager);\r\n            _this.socketOnUsers(socket, _this.crmStoreManager);\r\n            _this.socketOnNotes(socket, _this.crmStoreManager);\r\n            socket.on('user.test.create', function () {\r\n                _this.crmStoreManager\r\n                    .createTestUser()\r\n                    .then(function (user) {\r\n                    socket.emit('user.test.create.response', user);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    return Server;\r\n}(endpoints_1.Endpoints));\r\nexports.Server = Server;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Endpoints = (function () {\r\n    function Endpoints() {\r\n    }\r\n    Endpoints.prototype.socketOnNotes = function (socket, crmStoreManager) {\r\n        socket.on('note.create', function (payload) {\r\n            console.log('note.get', payload);\r\n            if (payload.hasOwnProperty('id')) {\r\n                var id = payload.id;\r\n                crmStoreManager\r\n                    .getnote(id)\r\n                    .then(function (note) {\r\n                    socket.emit('note.get.response', note);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('note.get.response', { error: 'No ID in payload' });\r\n            }\r\n        });\r\n        socket.on('note.get', function (payload) {\r\n            console.log('note.get', payload);\r\n            if (payload.hasOwnProperty('id')) {\r\n                var id = payload.id;\r\n                crmStoreManager\r\n                    .getNote(id)\r\n                    .then(function (note) {\r\n                    socket.emit('note.get.response', note);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('note.get.response', { error: 'No ID in payload' });\r\n            }\r\n        });\r\n        socket.on('note.set', function (payload) {\r\n            crmStoreManager\r\n                .setNoteProp(payload.id, payload.prop)\r\n                .then(function (response) {\r\n                socket.emit('note.set.response', response);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnUsers = function (socket, crmStoreManager) {\r\n        socket.on('user.get', function (payload) {\r\n            console.log('user.get', payload);\r\n            if (payload.hasOwnProperty('id')) {\r\n                var id = payload.id;\r\n                crmStoreManager\r\n                    .getUser(id)\r\n                    .then(function (user) {\r\n                    socket.emit('user.get.response', user);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('user.get.response', { error: 'No ID in payload' });\r\n            }\r\n        });\r\n        socket.on('user.get', function (payload) {\r\n            console.log('user.get', payload);\r\n            if (payload.hasOwnProperty('id')) {\r\n                var id = payload.id;\r\n                crmStoreManager\r\n                    .getUser(id)\r\n                    .then(function (user) {\r\n                    socket.emit('user.get.response', user);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('user.get.response', { error: 'No ID in payload' });\r\n            }\r\n        });\r\n        socket.on('user.set', function (payload) {\r\n            crmStoreManager\r\n                .setUserProp(payload.id, payload.prop)\r\n                .then(function (response) {\r\n                socket.emit('user.set.response', response);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnQuotes = function (socket, crmStoreManager) {\r\n        socket.on('quote.create', function (payload) {\r\n            console.log('payload 0', payload.quoteProp);\r\n            crmStoreManager.createQuotes(payload.props).then(function (quote) {\r\n                socket.emit('quotes.post.response', quote);\r\n            });\r\n        });\r\n        socket.on('quotes.get', function (payload) {\r\n            console.log('payload 0quotes get', payload);\r\n            crmStoreManager.getQuotes(payload).then(function (quotes) {\r\n                console.log('hit response 96');\r\n                socket.emit('quotes.get.response', quotes);\r\n            });\r\n        });\r\n        socket.on('quotes.post', function (payload) {\r\n            if (payload) {\r\n                console.log('payload 0', payload);\r\n                crmStoreManager.createQuotes(payload).then(function (quotes) {\r\n                    socket.emit('quotes.post.response', quotes);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager.createQuotes(payload.quoteProps).then(function (quotes) {\r\n                    socket.emit('quotes.post.response', quotes);\r\n                });\r\n            }\r\n            socket.on('quoteLines.post', function (payload) {\r\n                crmStoreManager.createQuotes(payload).then(function (quotes) {\r\n                    socket.emit('quoteLines.post.response', quotes);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnContacts = function (socket, crmStoreManager) {\r\n        socket.on('contacts.create', function (payload) {\r\n            crmStoreManager.createContacts(payload).then(function (contact) {\r\n                socket.emit('contacts.create.response', contact);\r\n            });\r\n        });\r\n        socket.on('contacts.get', function (payload) {\r\n            if (payload) {\r\n                crmStoreManager.getContacts(payload.id)\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.get.response', payload);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager.getContacts()\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.get.response', payload);\r\n                });\r\n            }\r\n        });\r\n        socket.on('contacts.post', function (payload) {\r\n            crmStoreManager.setContactsProp(payload.id, payload.prop)\r\n                .then(function (contacts) {\r\n                console.log('payload 0', payload);\r\n                socket.emit('contacts.post.response', contacts);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnCompanies = function (socket, crmStoreManager) {\r\n        socket.on('companies.get', function (payload) {\r\n            console.log('COMPANIES', payload);\r\n            if (payload) {\r\n                crmStoreManager.getCompanies(payload.id)\r\n                    .then(function (companies) {\r\n                    socket.emit('companies.get.response', companies);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager\r\n                    .getCompanies()\r\n                    .then(function (companies) {\r\n                    socket.emit('companies.get.response', companies);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('companies.post', function (payload) {\r\n            if (payload) {\r\n                crmStoreManager\r\n                    .setCompaniesProp(payload.id, payload.prop)\r\n                    .then(function (company) {\r\n                    socket.emit('companies.post.response', company);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager\r\n                    .setCompaniesProp(payload.id, payload.prop)\r\n                    .then(function (company) {\r\n                    socket.emit('companies.post.response', company);\r\n                });\r\n            }\r\n        });\r\n        socket.on('companies.create', function (payload) {\r\n            crmStoreManager\r\n                .createCompany(payload)\r\n                .then(function (company) {\r\n                socket.emit('companies.create.response', company);\r\n            });\r\n        });\r\n    };\r\n    return Endpoints;\r\n}());\r\nexports.Endpoints = Endpoints;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.dbConfig = {\r\n    username: 'rdev',\r\n    password: '',\r\n    database: 'angular-bros-crm',\r\n    host: 'localhost',\r\n    dialect: 'sqlite',\r\n    pool: {\r\n        max: 5,\r\n        min: 0,\r\n        idle: 10000\r\n    },\r\n    storage: './rdev.sql3'\r\n};\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar sequelizeStatic = __webpack_require__(13);\r\nvar user_table_model_1 = __webpack_require__(10);\r\nvar company_table_model_1 = __webpack_require__(5);\r\nvar contact_table_model_1 = __webpack_require__(6);\r\nvar quote_line_table_model_1 = __webpack_require__(8);\r\nvar quote_table_model_1 = __webpack_require__(9);\r\nvar note_table_model_1 = __webpack_require__(7);\r\nvar CRMStoreManager = (function () {\r\n    function CRMStoreManager(config) {\r\n        this.config = config;\r\n        this.dbConfig();\r\n        this.modelsInit();\r\n    }\r\n    CRMStoreManager.prototype.syncTable = function () {\r\n        var _this = this;\r\n        this.sequelize.sync().then(function () {\r\n            _this.User.create({\r\n                firstName: 'Test',\r\n                lastName: 'Tester',\r\n                email: 'test@tester.com',\r\n                role: 'admin'\r\n            }, {});\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createTestUser = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.sequelize.sync().then(function (instance) {\r\n                return instance.User.create({\r\n                    email: 'test@tester.com',\r\n                    role: 'general'\r\n                });\r\n            }).then(function (userInstance) {\r\n                resolve(userInstance);\r\n                reject('error with test user');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.modelsInit = function () {\r\n        this.User = user_table_model_1.userModel(sequelizeStatic, this.sequelize);\r\n        this.Company = company_table_model_1.companyModel(sequelizeStatic, this.sequelize);\r\n        this.Contact = contact_table_model_1.contactModel(sequelizeStatic, this.sequelize);\r\n        this.Note = note_table_model_1.noteModel(sequelizeStatic, this.sequelize);\r\n        this.Quote = quote_table_model_1.quoteModel(sequelizeStatic, this.sequelize);\r\n        this.QuoteLine = quote_line_table_model_1.quoteLineModel(sequelizeStatic, this.sequelize);\r\n        this.User.hasMany(this.Company);\r\n        this.Contact.belongsTo(this.Company);\r\n        this.Contact.hasMany(this.Note);\r\n        this.Company.belongsTo(this.User);\r\n        this.Company.hasMany(this.Contact);\r\n        this.Company.hasMany(this.Quote);\r\n        this.Quote.belongsTo(this.Company);\r\n        this.Quote.hasMany(this.QuoteLine);\r\n        this.QuoteLine.belongsTo(this.Quote);\r\n        // this.Contact = contactModel(sequelizeStatic, this.sequelize);\r\n        // this.Resume.hasOne(this.Experience);\r\n    };\r\n    CRMStoreManager.prototype.dbConfig = function () {\r\n        this.sequelize = new sequelizeStatic(this.config.database, this.config.username, this.config.password, {\r\n            host: this.config.host,\r\n            dialect: this.config.dialect,\r\n            pool: {\r\n                max: this.config.pool.max,\r\n                min: this.config.pool.min,\r\n                idle: this.config.pool.idle\r\n            },\r\n            storage: this.config.storage\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getUser = function (id) {\r\n        var _this = this;\r\n        console.log('??', id);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(id).then(function (userInstance) {\r\n                resolve(userInstance.dataValues);\r\n                reject('error with find ID');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setUserProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(id).then(function (userInstance) {\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getCompanies = function (id) {\r\n        var _this = this;\r\n        console.log('get companies');\r\n        if (id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Company.findById(id).then(function (companiesInstance) {\r\n                    if (companiesInstance && companiesInstance.dataValues.id) {\r\n                        resolve(companiesInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Company.findAll({ include: [_this.Contact, _this.Quote] }).then((function (companies) {\r\n                    console.log('company', companies);\r\n                    resolve(companies);\r\n                    reject('error: no companies found');\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setCompaniesProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findById(id).then(function (userInstance) {\r\n                console.log('found company', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createCompany = function (company) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.create(company).then(function (companyInstance) {\r\n                console.log(companyInstance);\r\n                resolve(companyInstance.dataValues);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getContacts = function (id) {\r\n        var _this = this;\r\n        if (id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Contact.findById(id).then(function (contactsInstance) {\r\n                    if (contactsInstance && contactsInstance.dataValues.id) {\r\n                        resolve(contactsInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Contact.findAll().then((function (contacts) {\r\n                    if (contacts.length > 0) {\r\n                        resolve(contacts);\r\n                    }\r\n                    else {\r\n                        reject('error: no contacts found');\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setContactsProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findById(id).then(function (userInstance) {\r\n                console.log('found contact', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createContacts = function (contact) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.create(contact).then(function (contactInstance) {\r\n                resolve(contactInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getNotes = function (id) {\r\n        var _this = this;\r\n        if (id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Note.findById(id).then(function (notesInstance) {\r\n                    if (notesInstance && notesInstance.dataValues.id) {\r\n                        resolve(notesInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Note.findAll().then((function (notes) {\r\n                    if (notes.length > 0) {\r\n                        resolve(notes);\r\n                    }\r\n                    else {\r\n                        reject('error: no notes found');\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setNoteProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.findById(id).then(function (userInstance) {\r\n                console.log('found note', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createNotes = function (note) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.create(note).then(function (noteInstance) {\r\n                resolve(noteInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getQuotes = function (payload) {\r\n        var _this = this;\r\n        if (payload.id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Quote.findById(payload.id, {\r\n                    include: [_this.QuoteLine]\r\n                }).then(function (quotesInstance) {\r\n                    if (quotesInstance && quotesInstance.dataValues.id) {\r\n                        resolve(quotesInstance.dataValues);\r\n                    }\r\n                    else {\r\n                        reject('error with find ID');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve) {\r\n                _this.Quote.findAll({\r\n                    include: [_this.QuoteLine]\r\n                }).then((function (quotes) {\r\n                    console.log('find all', quotes);\r\n                    resolve(quotes);\r\n                }));\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setQuotesProp = function (id, prop) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findById(id).then(function (userInstance) {\r\n                console.log('found quote', userInstance);\r\n                resolve(userInstance.update((_a = {},\r\n                    _a[prop.key] = prop.value,\r\n                    _a)));\r\n                var _a;\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuotes = function (quotes) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.create(quotes).then(function (quoteInstance) {\r\n                resolve(quoteInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuoteLine = function (quoteId, quoteLine) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findById(quoteId).then(function (quoteInstance) {\r\n                quoteInstance.QuoteLine.create(quoteLine).then(function (quoteLineInstance) {\r\n                    resolve(quoteLineInstance);\r\n                });\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    return CRMStoreManager;\r\n}());\r\nexports.CRMStoreManager = CRMStoreManager;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction companyModel(DataTypes, sequlize) {\r\n    return sequlize.define('company', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        city: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        zip: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        web: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        fax: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        misc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.companyModel = companyModel;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction contactModel(DataTypes, sequlize) {\r\n    return sequlize.define('contact', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n            // required: true\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING\r\n        },\r\n        position: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.contactModel = contactModel;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction noteModel(DataTypes, sequlize) {\r\n    return sequlize.define('note', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        title: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        text: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.noteModel = noteModel;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteLineModel(DataTypes, sequlize) {\r\n    return sequlize.define('quoteLine', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n        },\r\n        weight: {\r\n            type: DataTypes.DOUBLE\r\n        },\r\n        isCentered: {\r\n            type: DataTypes.BOOLEAN\r\n        },\r\n        unit: {\r\n            type: DataTypes.STRING\r\n        },\r\n        cost: {\r\n            type: DataTypes.FLOAT\r\n        },\r\n        desc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.quoteLineModel = quoteLineModel;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteModel(DataTypes, sequlize) {\r\n    return sequlize.define('quote', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.quoteModel = quoteModel;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction userModel(DataTypes, sequlize) {\r\n    return sequlize.define('user', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        firstName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        lastName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        passHash: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        role: {\r\n            type: DataTypes.ENUM,\r\n            values: ['general', 'blocked', 'admin', 'removed'],\r\n            required: true\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING,\r\n            required: true\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessName: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessWeb: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessPhone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessFax: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.userModel = userModel;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"http\");\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"sequelize\");\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"socket.io\");\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// backend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 06a58fc15052d5bb0aac","import {Server} from './app';\n\nfunction boot() {\n\tServer.bootstrap();\n}\n\nboot();\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import * as http from 'http';\nimport * as express from 'express';\nimport * as Socketio from 'socket.io';\nimport {CRMStoreManager} from './orm/store-manager';\nimport {dbConfig} from './orm/config';\nimport {Endpoints} from './endpoints/endpoints';\n\nexport class Server extends Endpoints {\n\tprivate app: express.Application;\n\tprivate server: express.Server;\n\tprivate IO;\n\tprivate port: number = 1729;\n\tprivate crmStoreManager: CRMStoreManager;\n\n\tpublic static bootstrap(): Server {\n\t\treturn new Server();\n\t}\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.app = express();\n\t\tthis.config();\n\t\tthis.endPoints();\n\t};\n\n\tprivate config(): void {\n\t\tthis.server = http.createServer(this.app);\n\t\tconsole.log('listening on port ' + this.port);\n\t\tthis.server.listen(this.port);\n\t\tthis.IO = Socketio(this.server);\n\t\tthis.crmStoreManager = new CRMStoreManager(dbConfig);\n\t}\n\n\tprivate endPoints(): void {\n\t\tthis.IO.on('connection', socket => {\n\t\t\tthis.socketOnCompanies(socket, this.crmStoreManager);\n\t\t\tthis.socketOnQuotes(socket, this.crmStoreManager);\n\t\t\tthis.socketOnContacts(socket, this.crmStoreManager);\n\t\t\tthis.socketOnUsers(socket, this.crmStoreManager);\n\t\t\tthis.socketOnNotes(socket, this.crmStoreManager);\n\t\t\tsocket.on('user.test.create', () => {\n\t\t\t\tthis.crmStoreManager\n\t\t\t\t\t.createTestUser()\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.test.create.response', user);\n\t\t\t\t\t})\n\t\t\t});\n\n\t\t})\n\t}\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","import {CRMStoreManager} from '../orm/store-manager';\nimport * as SocketIO from 'socket.io';\nexport class Endpoints {\n\n\tconstructor() {\n\t}\n\n\tpublic socketOnNotes(socket: SocketIO, crmStoreManager) {\n\t\tsocket.on('note.create', (payload?: any) => {\n\t\t\tconsole.log('note.get', payload);\n\t\t\tif (payload.hasOwnProperty('id')) {\n\t\t\t\tlet id = payload.id;\n\t\t\t\tcrmStoreManager\n\t\t\t\t\t.getnote(id)\n\t\t\t\t\t.then(note => {\n\t\t\t\t\t\tsocket.emit('note.get.response', note);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('note.get.response', {error: 'No ID in payload'})\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('note.get', (payload?: any) => {\n\t\t\tconsole.log('note.get', payload);\n\t\t\tif (payload.hasOwnProperty('id')) {\n\t\t\t\tlet id = payload.id;\n\t\t\t\tcrmStoreManager\n\t\t\t\t\t.getNote(id)\n\t\t\t\t\t.then(note => {\n\t\t\t\t\t\tsocket.emit('note.get.response', note);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('note.get.response', {error: 'No ID in payload'})\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('note.set', (payload?: any) => {\n\t\t\tcrmStoreManager\n\t\t\t\t.setNoteProp(payload.id, payload.prop)\n\t\t\t\t.then(response => {\n\t\t\t\t\tsocket.emit('note.set.response', response);\n\t\t\t\t});\n\t\t})\n\t}\n\n\tpublic socketOnUsers(socket: SocketIO, crmStoreManager){\n\t\tsocket.on('user.get', (payload?: any) => {\n\t\t\tconsole.log('user.get', payload);\n\t\t\tif (payload.hasOwnProperty('id')) {\n\t\t\t\tlet id = payload.id;\n\t\t\t\tcrmStoreManager\n\t\t\t\t\t.getUser(id)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.get.response', user);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('user.get.response', {error: 'No ID in payload'})\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('user.get', (payload?: any) => {\n\t\t\tconsole.log('user.get', payload);\n\t\t\tif (payload.hasOwnProperty('id')) {\n\t\t\t\tlet id = payload.id;\n\t\t\t\tcrmStoreManager\n\t\t\t\t\t.getUser(id)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.get.response', user);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('user.get.response', {error: 'No ID in payload'})\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('user.set', (payload?: any) => {\n\t\t\tcrmStoreManager\n\t\t\t\t.setUserProp(payload.id, payload.prop)\n\t\t\t\t.then(response => {\n\t\t\t\t\tsocket.emit('user.set.response', response);\n\t\t\t\t});\n\t\t})\n\n\t}\n\n\tpublic socketOnQuotes(socket: SocketIO , crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('quote.create', (payload?: any) => {\n\t\t\tconsole.log('payload 0', payload.quoteProp);\n\t\t\tcrmStoreManager.createQuotes(payload.props).then(quote => {\n\t\t\t\tsocket.emit('quotes.post.response', quote);\n\t\t\t});\n\t\t});\n\n\t\tsocket.on('quotes.get', (payload?: any) => {\n\t\t\t\tconsole.log('payload 0quotes get', payload);\n\t\t\t\tcrmStoreManager.getQuotes(payload).then(quotes => {\n\t\t\t\t\tconsole.log('hit response 96');\n\t\t\t\t\tsocket.emit('quotes.get.response', quotes);\n\t\t\t\t});\n\t\t});\n\n\t\tsocket.on('quotes.post', (payload?: any) => {\n\t\t\tif (payload) {\n\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\tcrmStoreManager.createQuotes(payload).then(quotes => {\n\t\t\t\t\tsocket.emit('quotes.post.response', quotes);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager.createQuotes(payload.quoteProps).then(quotes => {\n\t\t\t\t\tsocket.emit('quotes.post.response', quotes);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsocket.on('quoteLines.post', (payload?: any) => {\n\t\t\t\tcrmStoreManager.createQuotes(payload).then(quotes => {\n\t\t\t\t\tsocket.emit('quoteLines.post.response', quotes);\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic socketOnContacts(socket: SocketIO, crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('contacts.create', (payload?: any) => {\n\t\t\tcrmStoreManager.createContacts(payload).then(contact => {\n\t\t\t\tsocket.emit('contacts.create.response', contact);\n\t\t\t});\n\t\t});\n\n\t\tsocket.on('contacts.get', (payload?: any) => {\n\t\t\tif (payload){\n\t\t\t\tcrmStoreManager.getContacts(payload.id)\n\t\t\t\t\t.then(contacts => {\n\t\t\t\t\t\tsocket.emit('contacts.get.response', payload);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager.getContacts()\n\t\t\t\t\t.then(contacts => {\n\t\t\t\t\t\tsocket.emit('contacts.get.response', payload);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('contacts.post', (payload: any) => {\n\t\t\tcrmStoreManager.setContactsProp(payload.id, payload.prop)\n\t\t\t\t.then(contacts => {\n\t\t\t\t\tconsole.log('payload 0', payload);\n\t\t\t\t\tsocket.emit('contacts.post.response', contacts);\n\t\t\t\t});\n\t\t});\n\n\t}\n\n\tpublic socketOnCompanies(socket: SocketIO, crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('companies.get', (payload?: any) => {\n\t\t\tconsole.log('COMPANIES',payload);\n\t\t\tif (payload) {\n\t\t\t\tcrmStoreManager.getCompanies(payload.id)\n\t\t\t\t\t.then((companies: any) => {\n\t\t\t\t\t\tsocket.emit('companies.get.response', companies);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager\n\t\t\t\t\t.getCompanies()\n\t\t\t\t\t.then((companies: any) => {\n\t\t\t\t\t\tsocket.emit('companies.get.response', companies);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t\tsocket.on('companies.post', (payload?: any) => {\n\t\t\tif (payload) {\n\t\t\t\tcrmStoreManager\n\t\t\t\t\t.setCompaniesProp(payload.id, payload.prop)\n\t\t\t\t\t.then(company => {\n\t\t\t\t\t\tsocket.emit('companies.post.response', company);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager\n\t\t\t\t\t.setCompaniesProp(payload.id, payload.prop)\n\t\t\t\t\t.then(company => {\n\t\t\t\t\t\tsocket.emit('companies.post.response', company);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\n\t\tsocket.on('companies.create', (payload?: any) => {\n\t\t\tcrmStoreManager\n\t\t\t\t.createCompany(payload)\n\t\t\t\t.then(company => {\n\t\t\t\t\tsocket.emit('companies.create.response', company);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/endpoints/endpoints.ts","export interface DBConfig {\n\tusername: string;\n\tpassword: string;\n\tdatabase: string;\n\thost: string;\n\tdialect: string;\n\tpool: {\n\t\tmax: number,\n\t\tmin: number,\n\t\tidle: number\n\t}\n\tstorage: string;\n}\n\nexport const dbConfig = {\n\tusername: 'rdev',\n\tpassword: '',\n\tdatabase: 'angular-bros-crm',\n\thost: 'localhost',\n\tdialect: 'sqlite',\n\tpool: {\n\t\tmax: 5,\n\t\tmin: 0,\n\t\tidle: 10000\n\t},\n\tstorage: './rdev.sql3'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/orm/config.ts","import * as sequelizeStatic from 'sequelize';\nimport {DBConfig} from './config';\nimport {userModel} from './table-models/user.table-model';\nimport {UserAttributes, UserModel} from './table-models/attributes/user.attributes';\nimport {companyModel} from './table-models/company.table-model';\nimport {CompanyAttributes, CompanyModel} from './table-models/attributes/company.attributes';\nimport {ContactModel} from './table-models/attributes/contact.attributes';\nimport {NoteModel} from './table-models/attributes/note.attributes';\nimport {QuoteAttributes, QuoteModel} from './table-models/attributes/quote.attributes';\nimport {QuoteLineModel} from './table-models/attributes/quote-line.attributes';\nimport {contactModel} from './table-models/contact.table-model';\nimport {quoteLineModel} from './table-models/quote-line.table-model';\nimport {quoteModel} from './table-models/quote.table-model';\nimport {noteModel} from './table-models/note.table-model';\n\nexport interface StoreManager {\n\tgetUser(id: string): Promise<any>;\n\t// getUserState(): Promise<any>;\n\tsetUserProp(id: string, prop: string | number): Promise<any>;\n\t// registerUser(user: UserAttributes): void;\n\t// deleteUser(): Promise<any>;\n\tcreateTestUser(): Promise<any>;\n\tcreateCompany(company: CompanyAttributes): Promise<any>;\n\tsetCompaniesProp(id, prop): Promise<any>;\n}\nexport class CRMStoreManager {\n\tpublic sequelize: sequelizeStatic.Sequelize;\n\tpublic User: UserModel;\n\tpublic Company: CompanyModel;\n\tpublic Contact: ContactModel;\n\tpublic Note: NoteModel;\n\tpublic Quote: QuoteModel;\n\tpublic QuoteLine: QuoteLineModel;\n\n\tconstructor(private config: DBConfig) {\n\t\tthis.dbConfig();\n\t\tthis.modelsInit();\n\t}\n\n\tprivate syncTable(): void {\n\t\tthis.sequelize.sync().then(() => {\n\t\t\tthis.User.create({\n\t\t\t\tfirstName: 'Test',\n\t\t\t\tlastName: 'Tester',\n\t\t\t\temail: 'test@tester.com',\n\t\t\t\trole: 'admin'\n\t\t\t\t},{\n\t\t\t\t\t// this.Company.create({\n\t\t\t\t\t// email: 'test@company.com'},\n\t\t\t\t\t// {\n\t\t\t\t\t// \t// include: [\n\t\t\t\t\t// \t// \tthis.Quote.create({\n\t\t\t\t\t// \t// \tname: 'test quote',\n\t\t\t\t\t// \t// \t}, {\n\t\t\t\t\t// \t// \tinclude: [\n\t\t\t\t\t// \t// \t\tthis.QuoteLine.create({\n\t\t\t\t\t// \t// \t\t\tdesc: 'quote line 0'\n\t\t\t\t\t// \t// \t\t})\n\t\t\t\t\t// \t// \t]})\n\t\t\t\t\t// \t// ]\n\t\t\t\t\t// })\n\t\t\t\t// ]\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic createTestUser(): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.sequelize.sync().then(instance => {\n\t\t\treturn instance.User.create({\n\t\t\t\t\temail: 'test@tester.com',\n\t\t\t\t\trole: 'general'\n\t\t\t\t})\n\n\t\t\t}).then(userInstance =>{\n\t\t\t\tresolve(userInstance);\n\t\t\t\treject('error with test user');\n\t\t\t})\n\t\t})\n\t}\n\n\tprivate modelsInit(): void {\n\t\tthis.User = userModel(sequelizeStatic, this.sequelize);\n\t\tthis.Company = companyModel(sequelizeStatic, this.sequelize);\n\t\tthis.Contact = contactModel(sequelizeStatic, this.sequelize);\n\t\tthis.Note = noteModel(sequelizeStatic, this.sequelize);\n\t\tthis.Quote = quoteModel(sequelizeStatic, this.sequelize);\n\t\tthis.QuoteLine = quoteLineModel(sequelizeStatic, this.sequelize);\n\t\tthis.User.hasMany(this.Company);\n\t\tthis.Contact.belongsTo(this.Company);\n\t\tthis.Contact.hasMany(this.Note);\n\t\tthis.Company.belongsTo(this.User);\n\t\tthis.Company.hasMany(this.Contact);\n\t\tthis.Company.hasMany(this.Quote);\n\t\tthis.Quote.belongsTo(this.Company);\n\t\tthis.Quote.hasMany(this.QuoteLine);\n\t\tthis.QuoteLine.belongsTo(this.Quote);\n\t\t// this.Contact = contactModel(sequelizeStatic, this.sequelize);\n\t\t// this.Resume.hasOne(this.Experience);\n\t}\n\n\tprivate dbConfig(): void {\n\t\tthis.sequelize = new sequelizeStatic(this.config.database, this.config.username, this.config.password, {\n\t\t\thost: this.config.host,\n\t\t\tdialect: this.config.dialect,\n\t\t\tpool: {\n\t\t\t\tmax: this.config.pool.max,\n\t\t\t\tmin: this.config.pool.min,\n\t\t\t\tidle: this.config.pool.idle\n\t\t\t},\n\t\t\tstorage: this.config.storage\n\t\t});\n\t}\n\n\tpublic getUser(id: string): Promise<any> {\n\t\tconsole.log('??', id);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(id).then((userInstance: any) => {\n\t\t\t\t\tresolve(userInstance.dataValues);\n\t\t\t\t\treject('error with find ID');\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic setUserProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(id).then(userInstance => {\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getCompanies(id?: string): Promise<any> {\n\t\tconsole.log('get companies');\n\t\tif(id ) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Company.findById(id).then((companiesInstance: any) => {\n\t\t\t\t\tif (companiesInstance && companiesInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(companiesInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Company.findAll({include: [this.Contact, this.Quote]}).then((companies => {\n\t\t\t\t\tconsole.log('company', companies);\n\t\t\t\t\tresolve(companies);\n\t\t\t\t\treject('error: no companies found');\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setCompaniesProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found company', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createCompany(company: CompanyAttributes): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.create(company).then((companyInstance: any) => {\n\t\t\t\tconsole.log(companyInstance);\n\t\t\t\tresolve(companyInstance.dataValues);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getContacts(id?: string): Promise<any> {\n\t\tif(id) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Contact.findById(id).then((contactsInstance: any) => {\n\t\t\t\t\tif (contactsInstance && contactsInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(contactsInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Contact.findAll().then((contacts => {\n\t\t\t\t\tif (contacts.length > 0) {\n\t\t\t\t\t\tresolve(contacts)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error: no contacts found');\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setContactsProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found contact', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createContacts(contact: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.create(contact).then((contactInstance: any) => {\n\t\t\t\tresolve(contactInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getNotes(id?: string): Promise<any> {\n\t\tif(id) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Note.findById(id).then((notesInstance: any) => {\n\t\t\t\t\tif (notesInstance && notesInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(notesInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Note.findAll().then((notes => {\n\t\t\t\t\tif (notes.length > 0) {\n\t\t\t\t\t\tresolve(notes)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error: no notes found');\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setNoteProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found note', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createNotes(note: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.create(note).then((noteInstance: any) => {\n\t\t\t\tresolve(noteInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic getQuotes(payload: any): Promise<QuoteAttributes[]> {\n\t\tif(payload.id) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findById(payload.id, {\n\t\t\t\t\tinclude:[this.QuoteLine]\n\t\t\t\t}).then((quotesInstance: any) => {\n\t\t\t\t\tif (quotesInstance && quotesInstance.dataValues.id) {\n\t\t\t\t\t\tresolve(quotesInstance.dataValues);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tthis.Quote.findAll({\n\t\t\t\t\tinclude: [this.QuoteLine]\n\t\t\t\t}).then((quotes => {\n\t\t\t\tconsole.log('find all', quotes);\n\t\t\t\t\tresolve(quotes);\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setQuotesProp(id, prop): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.findById(id).then(userInstance => {\n\t\t\t\tconsole.log('found quote', userInstance);\n\t\t\t\tresolve(userInstance.update({\n\t\t\t\t\t[prop.key]:prop.value\n\t\t\t\t}))\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createQuotes(quotes: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.create(quotes).then((quoteInstance: any) => {\n\t\t\t\tresolve(quoteInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createQuoteLine(quoteId, quoteLine): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findById(quoteId).then((quoteInstance: any) => {\n\t\t\t\t\tquoteInstance.QuoteLine.create(quoteLine).then(quoteLineInstance => {\n\t\t\t\t\t\tresolve(quoteLineInstance);\n\t\t\t\t\t})\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\t// public registerUser(user: UserAttributes): Promise<UserAttributes> {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\t//todo send to Auth for response\n\t// \t\t\tif (authUser.passHash && authUser.role) {\n\t// \t\t\t\tthis.createUser(authUser).then(userInstance => {\n\t// \t\t\t\t\tif (userInstance.id) {\n\t// \t\t\t\t\t\tresolve(userInstance);\n\t// \t\t\t\t\t} else {\n\t// \t\t\t\t\t\treject('error with registration');\n\t// \t\t\t\t\t}\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t});\n\t// }\n\n\t// private createUser(user: UserAttributes): Promise<any> {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\tthis.User.create({\n\t// \t\t\tfirstName: user.firstName,\n\t// \t\t\tlastName: user.lastName,\n\t// \t\t\tpassHash: user.passHash,\n\t// \t\t\temail: user.email,\n\t// \t\t\taddressOne: user.addressOne,\n\t// \t\t\taddressTwo: user.addressTwo,\n\t// \t\t\tphone: user.phone,\n\t// \t\t\trole: user.role,\n\t// \t\t\tbusinessName: user.businessName,\n\t// \t\t\tbusinessWeb: user.businessWeb,\n\t// \t\t\tbusinessPhone: user.businessPhone,\n\t// \t\t\tbusinessFax: user.businessFax,\n\t// \t\t}).then(userInstance => {\n\t// \t\t\tconsole.log('user', userInstance);\n\t// \t\t\treturn userInstance;\n\t// \t\t})\n\t// \t})\n\t// }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/store-manager.ts","export function companyModel(DataTypes, sequlize) {\n\treturn sequlize.define('company', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcity: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tzip: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tweb: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tfax: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tmisc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/company.table-model.ts","export function contactModel(DataTypes, sequlize) {\n\treturn sequlize.define('contact', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t\t// required: true\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tposition: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/contact.table-model.ts","export function noteModel(DataTypes, sequlize) {\n\treturn sequlize.define('note', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\ttitle: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\ttext: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/note.table-model.ts","export function quoteLineModel(DataTypes, sequlize) {\n\treturn sequlize.define('quoteLine', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tweight: {\n\t\t\ttype: DataTypes.DOUBLE\n\t\t},\n\t\tisCentered: {\n\t\t\ttype: DataTypes.BOOLEAN\n\t\t},\n\t\tunit: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcost: {\n\t\t\ttype: DataTypes.FLOAT\n\t\t},\n\t\tdesc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote-line.table-model.ts","export function quoteModel(DataTypes, sequlize) {\n\treturn sequlize.define('quote', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote.table-model.ts","export function userModel(DataTypes, sequlize) {\n\treturn sequlize.define('user', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tfirstName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tlastName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tpassHash: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\trole: {\n\t\t\ttype: DataTypes.ENUM,\n\t\t\tvalues: ['general', 'blocked', 'admin', 'removed'],\n\t\t\trequired: true\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\trequired: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessName: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessWeb: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessPhone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessFax: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/user.table-model.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}