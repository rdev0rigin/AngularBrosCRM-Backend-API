{"version":3,"sources":["webpack:///backend.js","webpack:///webpack/bootstrap 33a314a4d16737b259de","webpack:///./src/main.ts","webpack:///./src/app.ts","webpack:///./src/endpoints/endpoints.ts","webpack:///./src/orm/config.ts","webpack:///./src/orm/store-manager.ts","webpack:///./src/orm/table-models/company.table-model.ts","webpack:///./src/orm/table-models/contact.table-model.ts","webpack:///./src/orm/table-models/note.table-model.ts","webpack:///./src/orm/table-models/quote-line.table-model.ts","webpack:///./src/orm/table-models/quote.table-model.ts","webpack:///./src/orm/table-models/user.table-model.ts","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"lodash\"","webpack:///external \"sequelize\"","webpack:///external \"socket.io\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","app_1","Server","bootstrap","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","http","express","Socketio","store_manager_1","endpoints_1","_super","_this","port","app","config","endPoints","server","createServer","console","log","listen","IO","crmStoreManager","CRMStoreManager","on","socket","socketOnCompanies","socketOnQuotes","socketOnContacts","socketOnUsers","socketOnNotes","createTestUser","then","user","emit","Endpoints","payload","createNote","note","error","id","getNote","getNotes","notes","setNoteProp","response","destroyNote","getUser","err","setUserProps","createQuote","quote","getQuotes","quotes","getQuote","setQuoteProps","setQuoteLineProps","createQuoteLine","res","destroyQuote","destroyQuoteLine","createContact","contact","getContact","getContacts","contacts","setContactProps","deleteContact","getCompanies","companies","getCompany","prop","setCompanyProp","company","props","setCompanyProps","createCompany","deleteCompany","DB_CONFIG","username","password","database","host","dialect","pool","max","min","idle","storage","sequelizeStatic","config_1","company_table_model_1","user_table_model_1","contact_table_model_1","quote_line_table_model_1","quote_table_model_1","note_table_model_1","_","_dbConfig","dbConfig","modelsInit","User","userModel","sequelize","Company","companyModel","Contact","contactModel","Note","noteModel","Quote","quoteModel","QuoteLine","quoteLineModel","hasMany","belongsTo","foreignKey","allowNull","syncTable","sync","firstName","lastName","email","role","Promise","resolve","reject","findById","userInstance","update","catch","instance","companiesInstance","findAll","include","companyInstance","_a","key","updatedCompanyInstance","destroy","where","contactsInstance","owner_id","company_id","contactInstance","assign","contact_id","noteInstance","quotesInstance","quoteInstance_find","merge","quote_id","DataTypes","sequlize","define","type","UUID","primaryKey","defaultValue","UUIDV4","STRING","addressOne","addressTwo","city","zip","phone","web","fax","misc","created_at","DATE","updated_at","deleted_at","freezeTableName","paranoid","underscored","position","title","text","weight","DOUBLE","isCentered","BOOLEAN","unit","cost","FLOAT","desc","passHash","ENUM","values","required","businessName","businessWeb","businessPhone","businessFax","require"],"mappings":"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","file":"backend.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 16);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar app_1 = __webpack_require__(1);\r\nfunction boot() {\r\n    app_1.Server.bootstrap();\r\n}\r\nboot();\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http = __webpack_require__(12);\r\nvar express = __webpack_require__(11);\r\nvar Socketio = __webpack_require__(15);\r\nvar store_manager_1 = __webpack_require__(4);\r\nvar endpoints_1 = __webpack_require__(2);\r\nvar Server = (function (_super) {\r\n    __extends(Server, _super);\r\n    function Server() {\r\n        var _this = _super.call(this) || this;\r\n        _this.port = 1729;\r\n        _this.app = express();\r\n        _this.config();\r\n        _this.endPoints();\r\n        return _this;\r\n    }\r\n    Server.bootstrap = function () {\r\n        return new Server();\r\n    };\r\n    ;\r\n    Server.prototype.config = function () {\r\n        this.server = http.createServer(this.app);\r\n        console.log('listening on port ' + this.port);\r\n        this.server.listen(this.port);\r\n        this.IO = Socketio(this.server);\r\n        this.crmStoreManager = new store_manager_1.CRMStoreManager();\r\n    };\r\n    Server.prototype.endPoints = function () {\r\n        var _this = this;\r\n        this.IO.on('connection', function (socket) {\r\n            _this.socketOnCompanies(socket, _this.crmStoreManager);\r\n            _this.socketOnQuotes(socket, _this.crmStoreManager);\r\n            _this.socketOnContacts(socket, _this.crmStoreManager);\r\n            _this.socketOnUsers(socket, _this.crmStoreManager);\r\n            _this.socketOnNotes(socket, _this.crmStoreManager);\r\n            socket.on('user.test.create', function () {\r\n                _this.crmStoreManager\r\n                    .createTestUser()\r\n                    .then(function (user) {\r\n                    socket.emit('user.test.create.response', user);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    return Server;\r\n}(endpoints_1.Endpoints));\r\nexports.Server = Server;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//TODO Update To real endpoints for bi-directional sockets. ;P\r\nvar Endpoints = (function () {\r\n    function Endpoints() {\r\n    }\r\n    Endpoints.prototype.socketOnNotes = function (socket, crmStoreManager) {\r\n        socket.on('note.create', function (payload) {\r\n            console.log('NoteCreated', payload);\r\n            if (payload) {\r\n                crmStoreManager.createNote(payload)\r\n                    .then(function (note) {\r\n                    socket.emit('note.create.response', note);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('note.create.response', { error: 'Cannot create without payload.' });\r\n            }\r\n        });\r\n        socket.on('notes.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getNote(payload)\r\n                    .then(function (note) {\r\n                    console.log('not with ID RESPONSE HIT: ');\r\n                    socket.emit('notes.get.response', note);\r\n                });\r\n            }\r\n            else {\r\n                console.log('get notes', payload);\r\n                crmStoreManager.getNotes(payload)\r\n                    .then(function (notes) {\r\n                    console.log('notes get response: ', notes);\r\n                    socket.emit('notes.get.response', notes);\r\n                });\r\n            }\r\n        });\r\n        socket.on('note.set', function (payload) {\r\n            crmStoreManager.setNoteProp(payload)\r\n                .then(function (response) {\r\n                socket.emit('note.set.response', response);\r\n            });\r\n        });\r\n        socket.on('note.destroy', function (payload) {\r\n            crmStoreManager.destroyNote(payload)\r\n                .then(function (response) {\r\n                socket.emit('note.destroy.response', response);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnUsers = function (socket, crmStoreManager) {\r\n        socket.on('user.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getUser(payload)\r\n                    .then(function (user) {\r\n                    socket.emit('user.get.response', user);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('user.get.response', { error: 'No ID in payload' });\r\n            }\r\n        });\r\n        socket.on('user.set', function (payload) {\r\n            console.log('user.set.response', payload);\r\n            crmStoreManager.setUserProps(payload)\r\n                .then(function (response) {\r\n                socket.emit('user.set.response', response);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnQuotes = function (socket, crmStoreManager) {\r\n        socket.on('quote.create', function (payload) {\r\n            if (payload) {\r\n                crmStoreManager.createQuote(payload)\r\n                    .then(function (quote) {\r\n                    socket.emit('quote.create.response', quote);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('quotes.get', function (payload) {\r\n            crmStoreManager.getQuotes(payload)\r\n                .then(function (quotes) {\r\n                console.log('QUOTES RESPONSE 2', quotes);\r\n                socket.emit('quotes.get.response', quotes);\r\n            });\r\n        });\r\n        socket.on('quote.get', function (payload) {\r\n            crmStoreManager.getQuote(payload)\r\n                .then(function (quotes) {\r\n                console.log('QUOTES RESPONSE', quotes);\r\n                socket.emit('quote.get.response', quotes);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n        socket.on('quote.set', function (payload) {\r\n            crmStoreManager.setQuoteProps(payload)\r\n                .then(function (quotes) {\r\n                socket.emit('quote.set.response', quotes);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n        socket.on('quoteLine.set', function (payload) {\r\n            crmStoreManager.setQuoteLineProps(payload)\r\n                .then(function (quotes) {\r\n                socket.emit('quoteLine.set.response', quotes);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n        socket.on('quoteLine.create', function (payload) {\r\n            crmStoreManager.createQuoteLine(payload)\r\n                .then(function (res) {\r\n                socket.emit('quoteLine.create.response', res);\r\n            });\r\n        });\r\n        socket.on('quote.destroy', function (payload) {\r\n            crmStoreManager.destroyQuote(payload)\r\n                .then(function (res) {\r\n                socket.emit('quote.destroy.response', res);\r\n            });\r\n        });\r\n        socket.on('quoteLine.destroy', function (payload) {\r\n            crmStoreManager.destroyQuoteLine(payload)\r\n                .then(function (res) {\r\n                socket.emit('quoteLine.destroy.response', res);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnContacts = function (socket, crmStoreManager) {\r\n        socket.on('contact.create', function (payload) {\r\n            if (payload) {\r\n                crmStoreManager.createContact(payload).then(function (contact) {\r\n                    socket.emit('contact.create.response', contact);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('contacts.get', function (payload) {\r\n            if (payload && typeof payload.id === 'string') {\r\n                crmStoreManager.getContact(payload)\r\n                    .then(function (contact) {\r\n                    socket.emit('contacts.get.response', contact);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else {\r\n                crmStoreManager.getContacts(payload)\r\n                    .then(function (contacts) {\r\n                    socket.emit('contacts.get.response', contacts);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n        });\r\n        socket.on('contact.set', function (payload) {\r\n            if (payload && typeof payload.id === 'string')\r\n                crmStoreManager.setContactProps(payload)\r\n                    .then(function (contact) {\r\n                    socket.emit('contact.set.response', contact);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n        });\r\n        socket.on('contact.destroy', function (payload) {\r\n            crmStoreManager.deleteContact(payload).then(function (res) {\r\n                socket.emit('contact.destroy.response', res);\r\n            });\r\n        });\r\n    };\r\n    Endpoints.prototype.socketOnCompanies = function (socket, crmStoreManager) {\r\n        socket.on('companies.get', function () {\r\n            crmStoreManager.getCompanies()\r\n                .then(function (companies) {\r\n                socket.emit('companies.get.response', companies);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n        socket.on('company.get', function (payload) {\r\n            crmStoreManager.getCompany(payload)\r\n                .then(function (companies) {\r\n                socket.emit('company.get.response', companies);\r\n            }, function (err) {\r\n                console.log('error', err);\r\n            });\r\n        });\r\n        socket.on('company.set', function (payload) {\r\n            if (payload.prop && typeof payload.id === 'string') {\r\n                crmStoreManager.setCompanyProp(payload)\r\n                    .then(function (company) {\r\n                    socket.emit('company.set.response', company);\r\n                }, function (err) {\r\n                    console.log('error', err);\r\n                });\r\n            }\r\n            else if (payload.props) {\r\n                crmStoreManager.setCompanyProps(payload)\r\n                    .then(function (company) {\r\n                    socket.emit('company.set.response', company);\r\n                });\r\n            }\r\n            else {\r\n                socket.emit('company.set.response', { error: 'Error: No payload or id' });\r\n            }\r\n        });\r\n        socket.on('company.create', function (payload) {\r\n            crmStoreManager\r\n                .createCompany(payload)\r\n                .then(function (company) {\r\n                socket.emit('company.create.response', company);\r\n            });\r\n        });\r\n        socket.on('company.delete', function (payload) {\r\n            crmStoreManager\r\n                .deleteCompany(payload)\r\n                .then(function (company) {\r\n                socket.emit('company.delete.response', company);\r\n            });\r\n        });\r\n    };\r\n    return Endpoints;\r\n}());\r\nexports.Endpoints = Endpoints;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DB_CONFIG = {\r\n    username: 'rdev',\r\n    password: '',\r\n    database: 'angular-bros-crm',\r\n    host: 'localhost',\r\n    dialect: 'sqlite',\r\n    pool: {\r\n        max: 5,\r\n        min: 0,\r\n        idle: 10000\r\n    },\r\n    storage: './rdev.sql3'\r\n};\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar sequelizeStatic = __webpack_require__(14);\r\nvar config_1 = __webpack_require__(3);\r\nvar company_table_model_1 = __webpack_require__(5);\r\nvar user_table_model_1 = __webpack_require__(10);\r\nvar contact_table_model_1 = __webpack_require__(6);\r\nvar quote_line_table_model_1 = __webpack_require__(8);\r\nvar quote_table_model_1 = __webpack_require__(9);\r\nvar note_table_model_1 = __webpack_require__(7);\r\nvar _ = __webpack_require__(13);\r\nvar CRMStoreManager = (function () {\r\n    function CRMStoreManager() {\r\n        this._dbConfig = config_1.DB_CONFIG;\r\n        this.dbConfig(this._dbConfig);\r\n        this.modelsInit();\r\n    }\r\n    CRMStoreManager.prototype.modelsInit = function () {\r\n        this.User = user_table_model_1.userModel(sequelizeStatic, this.sequelize);\r\n        this.Company = company_table_model_1.companyModel(sequelizeStatic, this.sequelize);\r\n        this.Contact = contact_table_model_1.contactModel(sequelizeStatic, this.sequelize);\r\n        this.Note = note_table_model_1.noteModel(sequelizeStatic, this.sequelize);\r\n        this.Quote = quote_table_model_1.quoteModel(sequelizeStatic, this.sequelize);\r\n        this.QuoteLine = quote_line_table_model_1.quoteLineModel(sequelizeStatic, this.sequelize);\r\n        this.User.hasMany(this.Company);\r\n        this.Contact.belongsTo(this.Company, { foreignKey: { allowNull: false } });\r\n        this.Contact.hasMany(this.Note);\r\n        this.Note.belongsTo(this.Contact, { foreignKey: { allowNull: false } });\r\n        this.Company.belongsTo(this.User);\r\n        this.Company.hasMany(this.Contact, { foreignKey: { allowNull: false } });\r\n        this.Company.hasMany(this.Quote);\r\n        this.Quote.belongsTo(this.Company);\r\n        this.Quote.hasMany(this.QuoteLine);\r\n        this.QuoteLine.belongsTo(this.Quote);\r\n        // this.syncTable();\r\n    };\r\n    CRMStoreManager.prototype.dbConfig = function (config) {\r\n        this.sequelize = new sequelizeStatic(config.database, config.username, config.password, {\r\n            host: config.host,\r\n            dialect: config.dialect,\r\n            pool: {\r\n                max: config.pool.max,\r\n                min: config.pool.min,\r\n                idle: config.pool.idle\r\n            },\r\n            storage: config.storage\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.syncTable = function () {\r\n        var _this = this;\r\n        this.sequelize.sync().then(function () {\r\n            _this.User.create({\r\n                firstName: 'Test',\r\n                lastName: 'Tester',\r\n                email: 'test@tester.com',\r\n                role: 'admin'\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getUser = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(payload.id)\r\n                .then(function (userInstance) {\r\n                console.log('user ', userInstance);\r\n                resolve(userInstance);\r\n                reject('error with find ID');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setUserProps = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.User.findById(payload.id)\r\n                .then(function (userInstance) {\r\n                userInstance.update(payload.props)\r\n                    .then(function (response) {\r\n                    resolve(response);\r\n                    console.log('user set', response);\r\n                }, function (error) {\r\n                    reject('update error with' + error);\r\n                }).catch(function (error) { return console.log(error); });\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createTestUser = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.sequelize.sync().then(function (instance) {\r\n                return instance.User.create({\r\n                    email: 'test@tester.com',\r\n                    role: 'general'\r\n                });\r\n            }).then(function (userInstance) {\r\n                resolve(userInstance);\r\n                reject('error with test user');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getCompany = function (payload) {\r\n        var _this = this;\r\n        if (payload) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Company.findById(payload.id)\r\n                    .then(function (companiesInstance) {\r\n                    resolve(companiesInstance);\r\n                    reject('error with find ID');\r\n                });\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.getCompanies = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findAll({\r\n                include: [_this.Contact, _this.Quote,]\r\n            })\r\n                .then(function (companies) {\r\n                resolve(companies);\r\n                reject('error: no companies found');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setCompanyProp = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findById(payload.id)\r\n                .then(function (companyInstance) {\r\n                companyInstance.update((_a = {}, _a[payload.prop.key] = payload.prop.value, _a))\r\n                    .then(function (updatedCompanyInstance) {\r\n                    resolve(updatedCompanyInstance);\r\n                }).catch(function (err) { return console.log('ERROR : setCompanyProp', err); });\r\n                var _a;\r\n            }, function (error) { return reject('Company set prop error :' + error); });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setCompanyProps = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.findById(payload.id)\r\n                .then(function (companyInstance) {\r\n                companyInstance.update(payload.props)\r\n                    .then(function (updatedCompanyInstance) {\r\n                    resolve(updatedCompanyInstance);\r\n                }).catch(function (err) { return console.log('ERROR : setCompanyProp', err); });\r\n            }, function (error) { return reject('Company set prop error :' + error); });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createCompany = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.create(payload.props, {\r\n                include: [_this.Quote, _this.Contact]\r\n            }).then(function (companyInstance) {\r\n                resolve(companyInstance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.deleteCompany = function (payload) {\r\n        var _this = this;\r\n        console.log('payload', payload);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Company.destroy({ where: { id: payload.id } }).then(function (res) {\r\n                resolve(res);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.deleteContact = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.Contact.destroy({ where: { id: payload.id } }).then(function (res) {\r\n                resolve(res);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getContact = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findById(payload.id, { include: [_this.Note] })\r\n                .then(function (contactsInstance) {\r\n                console.log('Contact instance ', contactsInstance);\r\n                resolve(contactsInstance);\r\n                reject('error with find ID');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getContacts = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (payload.owner_id) {\r\n                _this.Contact.findAll({ where: { company_id: payload.owner_id }, include: [_this.Note] })\r\n                    .then(function (contactsInstance) {\r\n                    console.log('CONTACTS INSTANCE', contactsInstance);\r\n                    resolve(contactsInstance);\r\n                });\r\n            }\r\n            else {\r\n                _this.Contact.findAll({ include: [_this.Note] })\r\n                    .then(function (contactsInstance) {\r\n                    console.log('CONTACTS INSTANCE', contactsInstance);\r\n                    resolve(contactsInstance);\r\n                }, function (error) { return reject('error finding Contacts: ' + error); });\r\n            }\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setContactProps = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Contact.findById(payload.id)\r\n                .then(function (contactInstance) {\r\n                contactInstance.update(payload.props)\r\n                    .then(function (instance) {\r\n                    resolve(instance);\r\n                });\r\n            }, function (error) {\r\n                reject('update error with: ' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createContact = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var props = Object.assign({}, payload.props, { company_id: payload.owner_id });\r\n            _this.Contact.create(props).then(function (instance) {\r\n                resolve(instance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getNote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.findById(payload.id).then(function (notes) {\r\n                resolve(notes);\r\n                reject('error: no notes found');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getNotes = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.findAll({ where: { contact_id: payload.owner_id } })\r\n                .then(function (notes) {\r\n                resolve(notes);\r\n                reject('error: no notes found');\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setNoteProp = function (payload) {\r\n        var _this = this;\r\n        console.log('notes payload', payload);\r\n        return new Promise(function (resolve) {\r\n            _this.Note.findById(payload.id).then(function (noteInstance) {\r\n                noteInstance.update((_a = {}, _a[payload.prop.key] = payload.prop.value, _a))\r\n                    .then(function (response) {\r\n                    console.log('updated note with resposne: ', response);\r\n                    resolve(response);\r\n                });\r\n                var _a;\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createNote = function (payload) {\r\n        var _this = this;\r\n        var props = Object.assign({}, { contact_id: payload.owner_id });\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Note.create(props).then(function (instance) {\r\n                resolve(instance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.destroyNote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.Note.destroy({ where: { id: payload.id } }).then(function (res) {\r\n                resolve(res);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getQuote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.findById(payload.id, {\r\n                include: [\r\n                    _this.QuoteLine\r\n                ]\r\n            }).then(function (quotesInstance) {\r\n                console.log('FIND BY ID', quotesInstance);\r\n                resolve(quotesInstance);\r\n            }, function (error) { return reject('error with find ID'); });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.getQuotes = function (payload) {\r\n        var _this = this;\r\n        if (payload.owner_id) {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Quote.findAll({\r\n                    include: [\r\n                        _this.QuoteLine\r\n                    ],\r\n                    where: {\r\n                        company_id: payload.owner_id\r\n                    }\r\n                }).then(function (quotesInstance) {\r\n                    resolve(quotesInstance);\r\n                }, function (error) { return reject('error with find ID'); });\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(function (resolve, reject) {\r\n                _this.Quote.findAll({\r\n                    include: [_this.QuoteLine]\r\n                }).then(function (quotesInstance) {\r\n                    resolve(quotesInstance);\r\n                }, function (error) { return reject('error with find ID'); });\r\n            });\r\n        }\r\n    };\r\n    CRMStoreManager.prototype.setQuoteProps = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.update(payload.props, {\r\n                where: { id: payload.id }\r\n            }).then(function (response) {\r\n                if (+response[0] === 1)\r\n                    _this.Quote.findById(payload.id, {\r\n                        include: [_this.QuoteLine]\r\n                    })\r\n                        .then(function (quoteInstance_find) {\r\n                        resolve(quoteInstance_find);\r\n                    });\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.setQuoteLineProps = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.update(payload.props, {\r\n                where: { id: payload.id }\r\n            }).then(function (response) {\r\n                if (+response[0] === 1)\r\n                    _this.Quote.findById(payload.id, {\r\n                        include: [_this.QuoteLine]\r\n                    })\r\n                        .then(function (quoteInstance_find) {\r\n                        resolve(quoteInstance_find);\r\n                    });\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuote = function (payload) {\r\n        var _this = this;\r\n        var props = Object.assign({}, payload.props, { company_id: payload.owner_id });\r\n        return new Promise(function (resolve, reject) {\r\n            _this.Quote.create(props).then(function (instance) {\r\n                resolve(instance);\r\n            }, function (error) {\r\n                reject('update error with' + error);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.createQuoteLine = function (payload) {\r\n        var _this = this;\r\n        var props = _.merge({}, payload.props, { quote_id: payload.owner_id });\r\n        return new Promise(function (resolve) {\r\n            _this.QuoteLine.create(props).then(function (res) {\r\n                resolve(res);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.destroyQuote = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.Quote.destroy({ where: { id: payload.id } }).then(function (res) {\r\n                resolve(res);\r\n            });\r\n        });\r\n    };\r\n    CRMStoreManager.prototype.destroyQuoteLine = function (payload) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.Quote.destroy({ where: { id: payload.id } }).then(function (res) {\r\n                resolve(res);\r\n            });\r\n        });\r\n    };\r\n    return CRMStoreManager;\r\n}());\r\nexports.CRMStoreManager = CRMStoreManager;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction companyModel(DataTypes, sequlize) {\r\n    return sequlize.define('company', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        city: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        zip: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        web: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        fax: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        misc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.companyModel = companyModel;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction contactModel(DataTypes, sequlize) {\r\n    return sequlize.define('contact', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n            // required: true\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING\r\n        },\r\n        position: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.contactModel = contactModel;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction noteModel(DataTypes, sequlize) {\r\n    return sequlize.define('note', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        title: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        text: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.noteModel = noteModel;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteLineModel(DataTypes, sequlize) {\r\n    return sequlize.define('quoteLine', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING\r\n        },\r\n        weight: {\r\n            type: DataTypes.DOUBLE\r\n        },\r\n        isCentered: {\r\n            type: DataTypes.BOOLEAN\r\n        },\r\n        unit: {\r\n            type: DataTypes.STRING\r\n        },\r\n        cost: {\r\n            type: DataTypes.FLOAT\r\n        },\r\n        desc: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true\r\n    });\r\n}\r\nexports.quoteLineModel = quoteLineModel;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction quoteModel(DataTypes, sequlize) {\r\n    return sequlize.define('quote', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        name: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.quoteModel = quoteModel;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction userModel(DataTypes, sequlize) {\r\n    return sequlize.define('user', {\r\n        id: {\r\n            type: DataTypes.UUID,\r\n            primaryKey: true,\r\n            defaultValue: DataTypes.UUIDV4\r\n        },\r\n        firstName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        lastName: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        passHash: {\r\n            type: DataTypes.STRING,\r\n        },\r\n        role: {\r\n            type: DataTypes.ENUM,\r\n            values: ['general', 'blocked', 'admin', 'removed'],\r\n            required: true\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING,\r\n            required: true\r\n        },\r\n        addressOne: {\r\n            type: DataTypes.STRING\r\n        },\r\n        addressTwo: {\r\n            type: DataTypes.STRING\r\n        },\r\n        phone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessName: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessWeb: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessPhone: {\r\n            type: DataTypes.STRING\r\n        },\r\n        businessFax: {\r\n            type: DataTypes.STRING\r\n        },\r\n        created_at: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false\r\n        },\r\n        updated_at: DataTypes.DATE,\r\n        deleted_at: DataTypes.DATE\r\n    }, {\r\n        freezeTableName: true,\r\n        paranoid: false,\r\n        underscored: true,\r\n    });\r\n}\r\nexports.userModel = userModel;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"http\");\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"lodash\");\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"sequelize\");\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"socket.io\");\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// backend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 33a314a4d16737b259de","import {Server} from './app';\n\nfunction boot() {\n\tServer.bootstrap();\n}\n\nboot();\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import * as http from 'http';\nimport * as express from 'express';\nimport * as Socketio from 'socket.io';\nimport {CRMStoreManager} from './orm/store-manager';\nimport {Endpoints} from './endpoints/endpoints';\n\nexport class Server extends Endpoints {\n\tprivate app: express.Application;\n\tprivate server: express.Server;\n\tprivate IO;\n\tprivate port: number = 1729;\n\tprivate crmStoreManager: CRMStoreManager;\n\n\tpublic static bootstrap(): Server {\n\t\treturn new Server();\n\t}\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.app = express();\n\t\tthis.config();\n\t\tthis.endPoints();\n\t};\n\n\tprivate config(): void {\n\t\tthis.server = http.createServer(this.app);\n\t\tconsole.log('listening on port ' + this.port);\n\t\tthis.server.listen(this.port);\n\t\tthis.IO = Socketio(this.server);\n\t\tthis.crmStoreManager = new CRMStoreManager();\n\t}\n\n\tprivate endPoints(): void {\n\t\tthis.IO.on('connection', socket => {\n\t\t\tthis.socketOnCompanies(socket, this.crmStoreManager);\n\t\t\tthis.socketOnQuotes(socket, this.crmStoreManager);\n\t\t\tthis.socketOnContacts(socket, this.crmStoreManager);\n\t\t\tthis.socketOnUsers(socket, this.crmStoreManager);\n\t\t\tthis.socketOnNotes(socket, this.crmStoreManager);\n\t\t\tsocket.on('user.test.create', () => {\n\t\t\t\tthis.crmStoreManager\n\t\t\t\t\t.createTestUser()\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.test.create.response', user);\n\t\t\t\t\t})\n\t\t\t});\n\t\t})\n\t}\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","import {CRMStoreManager} from '../orm/store-manager';\nimport * as SocketIO from 'socket.io';\nimport {error} from 'util';\nimport {QuoteAttributes} from '../orm/table-models/attributes/quote.attributes';\n\n//TODO Update To real endpoints for bi-directional sockets. ;P\nexport class Endpoints {\n\tconstructor() {}\n\n\tpublic socketOnNotes(socket: SocketIO, crmStoreManager: CRMStoreManager): void {\n\t\tsocket.on('note.create', (payload: any) => {\n\t\t\tconsole.log('NoteCreated', payload);\n\t\t\tif (payload){\n\t\t\t\tcrmStoreManager.createNote(payload)\n\t\t\t\t\t.then(note => {\n\t\t\t\t\t\tsocket.emit('note.create.response', note);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('note.create.response', {error: 'Cannot create without payload.'});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('notes.get', (payload?: any) => {\n\t\t\tif (payload && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.getNote(payload)\n\t\t\t\t\t.then(note => {\n\t\t\t\t\t\tconsole.log('not with ID RESPONSE HIT: ');\n\t\t\t\t\t\tsocket.emit('notes.get.response', note);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log('get notes', payload);\n\t\t\t\tcrmStoreManager.getNotes(payload)\n\t\t\t\t\t.then(notes => {\n\t\t\t\t\t\tconsole.log('notes get response: ', notes);\n\t\t\t\t\t\tsocket.emit('notes.get.response', notes);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('note.set', (payload: any) => {\n\t\t\tcrmStoreManager.setNoteProp(payload)\n\t\t\t\t.then(response => {\n\t\t\t\t\tsocket.emit('note.set.response', response);\n\t\t\t\t});\n\t\t});\n\n\t\tsocket.on('note.destroy', (payload: any) => {\n\t\t\tcrmStoreManager.destroyNote(payload)\n\t\t\t\t.then(response => {\n\t\t\t\t\tsocket.emit('note.destroy.response', response);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic socketOnUsers(socket: SocketIO, crmStoreManager: CRMStoreManager){\n\t\tsocket.on('user.get', (payload?: any) => {\n\t\t\tif (payload && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.getUser(payload)\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsocket.emit('user.get.response', user);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocket.emit('user.get.response', {error: 'No ID in payload'})\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('user.set', (payload: any) => {\n\t\t\t\t\tconsole.log('user.set.response', payload);\n\t\t\tcrmStoreManager.setUserProps(payload)\n\t\t\t\t.then(response => {\n\t\t\t\t\tsocket.emit('user.set.response', response);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t})\n\t}\n\n\tpublic socketOnQuotes(socket: SocketIO , crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('quote.create', (payload: any) => {\n\t\t\tif (payload){\n\t\t\t\tcrmStoreManager.createQuote(payload)\n\t\t\t\t\t.then((quote: QuoteAttributes) => {\n\t\t\t\t\t\tsocket.emit('quote.create.response', quote);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\n\t\tsocket.on('quotes.get', (payload?: any) => {\n\t\t\tcrmStoreManager.getQuotes(payload)\n\t\t\t\t.then((quotes: QuoteAttributes[]) => {\n\t\t\t\t\tconsole.log('QUOTES RESPONSE 2', quotes);\n\t\t\t\t\tsocket.emit('quotes.get.response', quotes);\n\t\t\t})\n\t\t});\n\n\t\tsocket.on('quote.get', (payload?: any) => {\n\t\t\tcrmStoreManager.getQuote(payload)\n\t\t\t\t.then(quotes => {\n\t\t\t\t\tconsole.log('QUOTES RESPONSE', quotes);\n\t\t\t\t\tsocket.emit('quote.get.response', quotes);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t});\n\t\t});\n\n\t\tsocket.on('quote.set', (payload: any) => {\n\t\t\tcrmStoreManager.setQuoteProps(payload)\n\t\t\t\t.then(quotes => {\n\t\t\t\t\tsocket.emit('quote.set.response', quotes);\n\t\t\t}, err => {\n\t\t\t\tconsole.log('error', err)\n\t\t\t})\n\t\t});\n\n\t\tsocket.on('quoteLine.set', (payload: any) => {\n\t\t\tcrmStoreManager.setQuoteLineProps(payload)\n\t\t\t\t.then(quotes => {\n\t\t\t\t\tsocket.emit('quoteLine.set.response', quotes);\n\t\t\t}, err => {\n\t\t\t\tconsole.log('error', err)\n\t\t\t})\n\t\t});\n\n\t\tsocket.on('quoteLine.create', (payload: any) => {\n\t\t\tcrmStoreManager.createQuoteLine(payload)\n\t\t\t\t.then(res => {\n\t\t\t\t\tsocket.emit('quoteLine.create.response', res);\n\t\t\t\t})\n\t\t});\n\n\t\tsocket.on('quote.destroy', (payload: any) => {\n\t\t\tcrmStoreManager.destroyQuote(payload)\n\t\t\t\t.then(res => {\n\t\t\t\t\tsocket.emit('quote.destroy.response', res);\n\t\t\t\t})\n\t\t});\n\n\t\tsocket.on('quoteLine.destroy', (payload: any) => {\n\t\t\tcrmStoreManager.destroyQuoteLine(payload)\n\t\t\t\t.then(res => {\n\t\t\t\t\tsocket.emit('quoteLine.destroy.response', res);\n\t\t\t\t})\n\t\t});\n\n\n\t}\n\n\tpublic socketOnContacts(socket: SocketIO, crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('contact.create', (payload?: any) => {\n\t\t\tif(payload) {\n\t\t\t\tcrmStoreManager.createContact(payload).then(contact => {\n\t\t\t\t\tsocket.emit('contact.create.response', contact);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('contacts.get', (payload?: any) => {\n\t\t\tif (payload && typeof payload.id === 'string'){\n\t\t\t\tcrmStoreManager.getContact(payload)\n\t\t\t\t\t.then(contact => {\n\t\t\t\t\t\tsocket.emit('contacts.get.response', contact);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcrmStoreManager.getContacts(payload)\n\t\t\t\t\t.then(contacts => {\n\t\t\t\t\t\tsocket.emit('contacts.get.response', contacts);\n\t\t\t\t}, err => {\n\t\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('contact.set', (payload: any) => {\n\t\t\tif(payload && typeof payload.id === 'string')\n\t\t\t\tcrmStoreManager.setContactProps(payload)\n\t\t\t\t.then(contact => {\n\t\t\t\t\tsocket.emit('contact.set.response', contact);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t});\n\n\t\tsocket.on('contact.destroy', (payload: any) => {\n\t\t\tcrmStoreManager.deleteContact(payload).then(res => {\n\t\t\t\tsocket.emit('contact.destroy.response', res);\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic socketOnCompanies(socket: SocketIO, crmStoreManager: CRMStoreManager) {\n\t\tsocket.on('companies.get', () => {\n\t\t\tcrmStoreManager.getCompanies()\n\t\t\t\t.then((companies: any) => {\n\t\t\t\t\tsocket.emit('companies.get.response', companies);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t});\n\n\t\tsocket.on('company.get', (payload) => {\n\t\t\tcrmStoreManager.getCompany(payload)\n\t\t\t\t.then((companies: any) => {\n\t\t\t\t\tsocket.emit('company.get.response', companies);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t});\n\n\t\tsocket.on('company.set', (payload: any) => {\n\t\t\tif (payload.prop && typeof payload.id === 'string') {\n\t\t\t\tcrmStoreManager.setCompanyProp(payload)\n\t\t\t\t.then(company => {\n\t\t\t\t\tsocket.emit('company.set.response', company);\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.log('error', err)\n\t\t\t\t});\n\t\t\t} else if(payload.props){\n\t\t\t\tcrmStoreManager.setCompanyProps(payload)\n\t\t\t\t\t.then(company => {\n\t\t\t\t\t\tsocket.emit('company.set.response', company);\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsocket.emit('company.set.response', {error: 'Error: No payload or id'});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('company.create', (payload?: any) => {\n\t\t\tcrmStoreManager\n\t\t\t\t.createCompany(payload)\n\t\t\t\t.then(company => {\n\t\t\t\t\tsocket.emit('company.create.response', company);\n\t\t\t\t});\n\t\t});\n\n\t\tsocket.on('company.delete', (payload?: any) => {\n\t\t\tcrmStoreManager\n\t\t\t\t.deleteCompany(payload)\n\t\t\t\t.then(company => {\n\t\t\t\t\tsocket.emit('company.delete.response', company);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/endpoints/endpoints.ts","export interface DBConfig {\n\tusername: string;\n\tpassword: string;\n\tdatabase: string;\n\thost: string;\n\tdialect: string;\n\tpool: {\n\t\tmax: number,\n\t\tmin: number,\n\t\tidle: number\n\t}\n\tstorage: string;\n}\n\nexport const DB_CONFIG = {\n\tusername: 'rdev',\n\tpassword: '',\n\tdatabase: 'angular-bros-crm',\n\thost: 'localhost',\n\tdialect: 'sqlite',\n\tpool: {\n\t\tmax: 5,\n\t\tmin: 0,\n\t\tidle: 10000\n\t},\n\tstorage: './rdev.sql3'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/orm/config.ts","import * as sequelizeStatic from 'sequelize';\nimport {DBConfig, DB_CONFIG} from './config';\nimport {UserAttributes, UserInstance, UserModel} from './table-models/attributes/user.attributes';\nimport {CompanyAttributes, CompanyInstance, CompanyModel} from './table-models/attributes/company.attributes';\nimport {ContactAttributes, ContactInstance, ContactModel} from './table-models/attributes/contact.attributes';\nimport {NoteAttributes, NoteInstance, NoteModel} from './table-models/attributes/note.attributes';\nimport {QuoteAttributes, QuoteInstance, QuoteModel} from './table-models/attributes/quote.attributes';\nimport {QuoteLineModel} from './table-models/attributes/quote-line.attributes';\nimport {companyModel} from './table-models/company.table-model';\nimport {userModel} from './table-models/user.table-model';\nimport {contactModel} from './table-models/contact.table-model';\nimport {quoteLineModel} from './table-models/quote-line.table-model';\nimport {quoteModel} from './table-models/quote.table-model';\nimport {noteModel} from './table-models/note.table-model';\nimport * as _ from 'lodash';\n\nexport interface StoreManager {\n\tdeleteCompany(payload): Promise<string>;\n\tgetUser(payload): Promise<UserAttributes>;\n\tsetUserProps(payload): Promise<UserAttributes>;\n\tcreateTestUser(): Promise<UserAttributes>;\n\tgetCompany(payload: any): Promise<CompanyAttributes[]>;\n\tsetCompanyProp(payload: any): Promise<CompanyAttributes>;\n\tsetCompanyProps(payload): Promise<CompanyAttributes>;\n\tcreateCompany(payload: any): Promise<CompanyAttributes>;\n\tgetContact(payload: any): Promise<ContactAttributes>;\n\tgetContacts(payload: any): Promise<ContactAttributes[]>;\n\tsetContactProps(payload: any): Promise<ContactAttributes>;\n\tcreateContact(payload: any): Promise<ContactAttributes>;\n\tdeleteContact(payload: any): Promise<any>;\n\tgetNote(payload: any): Promise<NoteAttributes>\n\tgetNotes(payload): Promise<NoteAttributes[]>;\n\tsetNoteProp(payload: any): Promise<NoteAttributes>;\n\tcreateNote(payload: any): Promise<NoteAttributes>;\n\tdestroyNote(payload): Promise<any>;\n\tgetQuotes(payload: any): Promise<QuoteAttributes[]>;\n\tgetQuote(payload: any): Promise<QuoteAttributes>;\n\tsetQuoteProps(payload): Promise<QuoteAttributes>;\n\tcreateQuote(payload: any): Promise<QuoteAttributes>;\n\tcreateQuoteLine(quoteId, quoteLine): Promise<any>;\n\tsetQuoteLineProps(payload: any): Promise<QuoteAttributes>;\n\tdestroyQuoteLine (payload): Promise<any>;\n}\n\nexport class CRMStoreManager implements StoreManager{\n\tpublic sequelize: sequelizeStatic.Sequelize;\n\tpublic User: UserModel;\n\tpublic Company: CompanyModel;\n\tpublic Contact: ContactModel;\n\tpublic Note: NoteModel;\n\tpublic Quote: QuoteModel;\n\tpublic QuoteLine: QuoteLineModel;\n\tprivate _dbConfig: DBConfig = DB_CONFIG;\n\n\tconstructor() {\n\t\tthis.dbConfig(this._dbConfig);\n\t\tthis.modelsInit();\n\t}\n\n\tprivate modelsInit(): void {\n\t\tthis.User = userModel(sequelizeStatic, this.sequelize);\n\t\tthis.Company = companyModel(sequelizeStatic, this.sequelize);\n\t\tthis.Contact = contactModel(sequelizeStatic, this.sequelize);\n\t\tthis.Note = noteModel(sequelizeStatic, this.sequelize);\n\t\tthis.Quote = quoteModel(sequelizeStatic, this.sequelize);\n\t\tthis.QuoteLine = quoteLineModel(sequelizeStatic, this.sequelize);\n\t\tthis.User.hasMany(this.Company);\n\t\tthis.Contact.belongsTo(this.Company, {foreignKey: {allowNull: false}});\n\t\tthis.Contact.hasMany(this.Note);\n\t\tthis.Note.belongsTo(this.Contact, {foreignKey: {allowNull: false}});\n\t\tthis.Company.belongsTo(this.User);\n\t\tthis.Company.hasMany(this.Contact,{foreignKey: {allowNull: false}});\n\t\tthis.Company.hasMany(this.Quote);\n\t\tthis.Quote.belongsTo(this.Company);\n\t\tthis.Quote.hasMany(this.QuoteLine);\n\t\tthis.QuoteLine.belongsTo(this.Quote);\n\t\t// this.syncTable();\n\t}\n\n\tprivate dbConfig(config): void {\n\t\tthis.sequelize = new sequelizeStatic(config.database, config.username, config.password, {\n\t\t\thost: config.host,\n\t\t\tdialect: config.dialect,\n\t\t\tpool: {\n\t\t\t\tmax: config.pool.max,\n\t\t\t\tmin: config.pool.min,\n\t\t\t\tidle: config.pool.idle\n\t\t\t},\n\t\t\tstorage: config.storage\n\t\t});\n\t}\n\n\tprivate syncTable(): void {\n\t\tthis.sequelize.sync().then(() => {\n\t\t\tthis.User.create({\n\t\t\t\tfirstName: 'Test',\n\t\t\t\tlastName: 'Tester',\n\t\t\t\temail: 'test@tester.com',\n\t\t\t\trole: 'admin'\n\t\t\t\t})\n\t\t})\n\t}\n\n\tpublic getUser(payload): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(payload.id)\n\t\t\t\t.then((userInstance: UserInstance) => {\n\t\t\t\tconsole.log('user ', userInstance);\n\t\t\t\t\tresolve(userInstance);\n\t\t\t\t\treject('error with find ID');\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setUserProps(payload): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.User.findById(payload.id)\n\t\t\t\t.then(userInstance => {\n\t\t\t\t\tuserInstance.update(payload.props)\n\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t\t\tconsole.log('user set', response);\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\treject('update error with' + error);\n\t\t\t\t}).catch(error => console.log(error));\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic createTestUser(): Promise<UserAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.sequelize.sync().then(instance => {\n\t\t\treturn instance.User.create({\n\t\t\t\t\temail: 'test@tester.com',\n\t\t\t\t\trole: 'general'\n\t\t\t})\n\t\t\t}).then(userInstance =>{\n\t\t\t\tresolve(userInstance);\n\t\t\t\treject('error with test user');\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic getCompany(payload: any): Promise<CompanyAttributes[]> {\n\t\tif (payload) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Company.findById(payload.id)\n\t\t\t\t\t.then((companiesInstance: CompanyInstance) => {\n\t\t\t\t\t\tresolve(companiesInstance);\n\t\t\t\t\t\treject('error with find ID');\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getCompanies(): Promise<CompanyAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findAll({\n\t\t\t\tinclude: [this.Contact, this.Quote, ]\n\t\t\t})\n\t\t\t\t.then((companies: CompanyInstance[])=> {\n\t\t\t\t\tresolve(companies);\n\t\t\t\t\treject('error: no companies found');\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setCompanyProp(payload): Promise<CompanyAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findById(payload.id)\n\t\t\t\t.then((companyInstance: CompanyInstance) => {\n\t\t\t\t\t\tcompanyInstance.update({[payload.prop.key]: payload.prop.value})\n\t\t\t\t\t\t\t.then((updatedCompanyInstance: CompanyInstance) => {\n\t\t\t\t\t\t\t\tresolve(updatedCompanyInstance);\n\t\t\t\t\t\t}).catch(err => console.log('ERROR : setCompanyProp', err))\n\t\t\t}, error => reject('Company set prop error :' + error))\n\t\t})\n\t}\n\n\tpublic setCompanyProps(payload): Promise<CompanyAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.findById(payload.id)\n\t\t\t\t.then((companyInstance: CompanyInstance) => {\n\t\t\t\t\t\tcompanyInstance.update(payload.props)\n\t\t\t\t\t\t\t.then((updatedCompanyInstance: CompanyInstance) => {\n\t\t\t\t\t\t\t\tresolve(updatedCompanyInstance);\n\t\t\t\t\t\t}).catch(err => console.log('ERROR : setCompanyProp', err))\n\t\t\t}, error => reject('Company set prop error :' + error))\n\t\t})\n\t}\n\n\tpublic createCompany(payload: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.create(payload.props, {\n\t\t\t\tinclude: [this.Quote, this.Contact]\n\t\t\t}).then((companyInstance: CompanyInstance) => {\n\t\t\t\tresolve(companyInstance);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic deleteCompany(payload: any): Promise<any> {\n\t\tconsole.log('payload', payload);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Company.destroy({where: {id: payload.id}}).then(res => {\n\t\t\t\tresolve(res);\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\n\tpublic deleteContact(payload: any): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.Contact.destroy({where: {id: payload.id}}).then(res => {\n\t\t\t\tresolve(res);\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic getContact(payload: any): Promise<ContactAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findById(payload.id, {include: [this.Note]})\n\t\t\t\t.then((contactsInstance: ContactInstance) => {\n\t\t\t\tconsole.log('Contact instance ',contactsInstance);\n\t\t\t\tresolve(contactsInstance);\n\t\t\t\treject('error with find ID');\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getContacts(payload): Promise<ContactAttributes[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif(payload.owner_id){\n\t\t\t\tthis.Contact.findAll({where: {company_id: payload.owner_id}, include: [this.Note]})\n\t\t\t\t\t.then((contactsInstance: ContactInstance[]) => {\n\t\t\t\t\t\tconsole.log('CONTACTS INSTANCE', contactsInstance);\n\t\t\t\t\t\tresolve(contactsInstance);\n\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.Contact.findAll({include: [this.Note]})\n\t\t\t\t\t.then((contactsInstance: ContactInstance[]) => {\n\t\t\t\t\tconsole.log('CONTACTS INSTANCE', contactsInstance);\n\t\t\t\t\tresolve(contactsInstance);\n\t\t\t\t}, error => reject('error finding Contacts: ' + error));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic setContactProps(payload): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Contact.findById(payload.id)\n\t\t\t\t.then((contactInstance: ContactInstance) => {\n\t\t\t\t\tcontactInstance.update(payload.props)\n\t\t\t\t\t\t.then((instance: ContactInstance) => {\n\t\t\t\t\t\t\tresolve(instance);\n\t\t\t\t\t})\n\t\t\t}, error => {\n\t\t\t\treject('update error with: ' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createContact(payload: any): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst props = Object.assign({}, payload.props, {company_id: payload.owner_id});\n\t\t\tthis.Contact.create(props).then((instance: any) => {\n\t\t\t\tresolve(instance);\n\t\t\t}, error => {\n\t\t\t\t\treject('update error with' + error);\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\tpublic getNote(payload): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.findById(payload.id).then((notes: NoteInstance)=> {\n\t\t\t\tresolve(notes);\n\t\t\t\treject('error: no notes found');\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getNotes(payload): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.findAll({where: {contact_id: payload.owner_id}})\n\t\t\t\t.then((notes: NoteInstance[])=> {\n\t\t\t\t\tresolve(notes);\n\t\t\t\t\treject('error: no notes found');\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setNoteProp(payload): Promise<NoteAttributes> {\n\t\tconsole.log('notes payload',payload);\n\t\treturn new Promise((resolve) => {\n\t\t\t\tthis.Note.findById(payload.id).then(noteInstance => {\n\t\t\t\t\tnoteInstance.update({[payload.prop.key]: payload.prop.value})\n\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\tconsole.log('updated note with resposne: ', response);\n\t\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tpublic createNote(payload: any): Promise<any> {\n\t\tconst props = Object.assign({}, {contact_id: payload.owner_id});\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Note.create(props).then((instance: any) => {\n\t\t\t\t\tresolve(instance);\n\t\t\t\t}, error => {\n\t\t\t\t\treject('update error with' + error);\n\t\t\t\t});\n\t\t})\n\t}\n\n\tpublic destroyNote(payload): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.Note.destroy({where: {id: payload.id}}).then(res => {\n\t\t\t\tresolve(res);\n\t\t\t})\n\t\t})\n\t}\n\tpublic getQuote(payload: any): Promise<QuoteAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.findById(payload.id,{\n\t\t\t\tinclude: [\n\t\t\t\t\tthis.QuoteLine\n\t\t\t\t]\n\t\t\t}).then((quotesInstance: QuoteInstance) => {\n\t\t\tconsole.log('FIND BY ID', quotesInstance);\n\t\t\t\tresolve(quotesInstance);\n\t\t\t}, error => reject('error with find ID'));\n\t\t});\n\t}\n\tpublic getQuotes(payload): Promise<QuoteAttributes[]> {\n\t\tif(payload.owner_id){\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findAll({\n\t\t\t\t\tinclude: [\n\t\t\t\t\t\tthis.QuoteLine\n\t\t\t\t\t],\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tcompany_id: payload.owner_id\n\t\t\t\t\t}\n\t\t\t\t}).then((quotesInstance: QuoteInstance[]) => {\n\t\t\t\t\tresolve(quotesInstance);\n\t\t\t\t}, error => reject('error with find ID'));\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.Quote.findAll({\n\t\t\t\t\tinclude:\n\t\t\t\t\t\t[this.QuoteLine]\n\t\t\t\t}).then((quotesInstance: QuoteInstance[]) => {\n\t\t\t\t\tresolve(quotesInstance);\n\t\t\t\t}, error => reject('error with find ID'));\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setQuoteProps(payload: any): Promise<QuoteAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.update(payload.props, {\n\t\t\t\twhere:\n\t\t\t\t\t{id: payload.id}\n\t\t\t}).then((response: any) => {\n\t\t\t\tif(+response[0] === 1)\n\t\t\t\tthis.Quote.findById(payload.id, {\n\t\t\t\t\tinclude: [this.QuoteLine]\n\t\t\t\t})\n\t\t\t\t\t.then((quoteInstance_find:QuoteInstance) => {\n\t\t\t\t\t\tresolve(quoteInstance_find)\n\t\t\t\t\t})\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic setQuoteLineProps(payload: any): Promise<QuoteAttributes> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.update(payload.props, {\n\t\t\t\twhere:\n\t\t\t\t\t{id: payload.id}\n\t\t\t}).then((response: any) => {\n\t\t\t\tif(+response[0] === 1)\n\t\t\t\tthis.Quote.findById(payload.id, {\n\t\t\t\t\tinclude: [this.QuoteLine]\n\t\t\t\t})\n\t\t\t\t\t.then((quoteInstance_find:QuoteInstance) => {\n\t\t\t\t\t\tresolve(quoteInstance_find)\n\t\t\t\t\t})\n\t\t\t}, error => {\n\t\t\t\treject('update error with' + error);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic createQuote(payload: any): Promise<QuoteAttributes> {\n\t\tconst props = Object.assign({}, payload.props, {company_id: payload.owner_id});\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Quote.create(props).then((instance: any) => {\n\t\t\t\t\tresolve(instance);\n\t\t\t\t}, error => {\n\t\t\t\t\treject('update error with' + error);\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\tpublic createQuoteLine(payload): Promise<any> {\n\t\tconst props = _.merge({}, payload.props, {quote_id: payload.owner_id});\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.QuoteLine.create(props).then(res => {\n\t\t\t\tresolve(res);\n\t\t\t});\n\t\t})\n\t}\n\n\tpublic destroyQuote(payload): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.Quote.destroy({where: {id: payload.id}}).then(res => {\n\t\t\t\tresolve(res);\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic destroyQuoteLine (payload): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.Quote.destroy({where: {id: payload.id}}).then(res => {\n\t\t\t\tresolve(res);\n\t\t\t})\n\t\t})\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/orm/store-manager.ts","export function companyModel(DataTypes, sequlize) {\n\treturn sequlize.define('company', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcity: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tzip: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tweb: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tfax: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tmisc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/company.table-model.ts","export function contactModel(DataTypes, sequlize) {\n\treturn sequlize.define('contact', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t\t// required: true\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tposition: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/contact.table-model.ts","export function noteModel(DataTypes, sequlize) {\n\treturn sequlize.define('note', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\ttitle: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\ttext: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/note.table-model.ts","export function quoteLineModel(DataTypes, sequlize) {\n\treturn sequlize.define('quoteLine', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tweight: {\n\t\t\ttype: DataTypes.DOUBLE\n\t\t},\n\t\tisCentered: {\n\t\t\ttype: DataTypes.BOOLEAN\n\t\t},\n\t\tunit: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcost: {\n\t\t\ttype: DataTypes.FLOAT\n\t\t},\n\t\tdesc: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote-line.table-model.ts","export function quoteModel(DataTypes, sequlize) {\n\treturn sequlize.define('quote', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tname: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\t// required: true\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at:  DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/quote.table-model.ts","export function userModel(DataTypes, sequlize) {\n\treturn sequlize.define('user', {\n\t\tid: {\n\t\t\ttype: DataTypes.UUID,\n\t\t\tprimaryKey: true,\n\t\t\tdefaultValue: DataTypes.UUIDV4\n\t\t},\n\t\tfirstName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tlastName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tpassHash: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\trole: {\n\t\t\ttype: DataTypes.ENUM,\n\t\t\tvalues: ['general', 'blocked', 'admin', 'removed'],\n\t\t\trequired: true\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\trequired: true\n\t\t},\n\t\taddressOne: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\taddressTwo: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tphone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessName: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessWeb: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessPhone: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tbusinessFax: {\n\t\t\ttype: DataTypes.STRING\n\t\t},\n\t\tcreated_at: {\n\t\t\ttype: DataTypes.DATE,\n\t\t\tallowNull: false\n\t\t},\n\t\tupdated_at: DataTypes.DATE,\n\t\tdeleted_at: DataTypes.DATE\n\t}, {\n\t\tfreezeTableName: true,\n\t\tparanoid: false,\n\t\tunderscored: true,\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./src/orm/table-models/user.table-model.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}